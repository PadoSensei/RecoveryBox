{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionsList.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { MediumAppText } from \"../styles/text\";\nimport SuggestionItem from \"./SuggestionItem\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Divider from \"./Divider\";\n\nfunction SuggestionsList() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var suggestionListToDisplay = useSelector(function (state) {\n    return state.settings.suggestionSettings.suggestionsList;\n  });\n  var navigation = useNavigation();\n  var dailySuggestions = useSelector(function (state) {\n    return state.dailyInfo.suggestions;\n  });\n\n  function clickHandler(list, suggestion) {\n    if (!list.includes(suggestion)) {\n      dispatch({\n        type: \"ADDTO_SUGGESTIONS\",\n        payload: suggestion\n      });\n    } else {\n      dispatch({\n        type: \"REMOVEFROM_SUGGESTIONS\",\n        payload: suggestion\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.topcontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    onPress: function onPress() {\n      return navigation.navigate('ModifySuggestions');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"MY DAILY SUGGESTIONS\")), React.createElement(View, {\n    style: styles.suggestionWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, suggestionListToDisplay.map(function (suggestion) {\n    return React.createElement(SuggestionItem, {\n      key: suggestion,\n      name: suggestion,\n      clickHandler: clickHandler,\n      selected: dailySuggestions.includes(suggestion) ? true : false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  icons: {\n    height: 30,\n    width: 30\n  },\n  topcontainer: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  }\n});\nexport default SuggestionsList;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionsList.js"],"names":["React","MediumAppText","SuggestionItem","useNavigation","useDispatch","useSelector","Divider","SuggestionsList","dispatch","suggestionListToDisplay","state","settings","suggestionSettings","suggestionsList","navigation","dailySuggestions","dailyInfo","suggestions","clickHandler","list","suggestion","includes","type","payload","styles","container","topcontainer","navigate","suggestionWrapper","map","StyleSheet","create","flex","backgroundColor","icons","height","width","alignItems","justifyContent","flexDirection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,aAAT;AACA,OAAOC,cAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP;;AAEA,SAASC,eAAT,GAA4B;AAAA;;AAE1B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,uBAAuB,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAN,CAAeC,kBAAf,CAAkCC,eAA7C;AAAA,GAAD,CAA3C;AACA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;AACA,MAAMY,gBAAgB,GAAGV,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACM,SAAN,CAAgBC,WAA3B;AAAA,GAAD,CAApC;;AAEA,WAASC,YAAT,CAAuBC,IAAvB,EAA6BC,UAA7B,EAAyC;AACvC,QAAI,CAACD,IAAI,CAACE,QAAL,CAAcD,UAAd,CAAL,EAAgC;AAC9BZ,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE,mBADC;AAEPC,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID,KALD,MAKO;AACLZ,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE,wBADC;AAEPC,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAID;AACF;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE;AAAA,aAAMZ,UAAU,CAACa,QAAX,CAAoB,mBAApB,CAAN;AAAA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,uBAAuB,CAACoB,GAAxB,CACC,UAAAT,UAAU;AAAA,WACV,oBAAC,cAAD;AACE,MAAA,GAAG,EAAEA,UADP;AAEE,MAAA,IAAI,EAAEA,UAFR;AAGE,MAAA,YAAY,EAAEF,YAHhB;AAIE,MAAA,QAAQ,EAAEH,gBAAgB,CAACM,QAAjB,CAA0BD,UAA1B,IAAwC,IAAxC,GAA+C,KAJ3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GADX,CADH,CATF,CADF;AAuBD;;AAED,IAAMI,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAU/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GAVwB;AAiB/BV,EAAAA,YAAY,EAAE;AACZO,IAAAA,eAAe,EAAE,MADL;AAEZI,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,cAAc,EAAE,QAHJ;AAIZC,IAAAA,aAAa,EAAE;AAJH;AAjBiB,CAAlB,CAAf;AAyBA,eAAehC,eAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Image, View, TouchableOpacity, Text } from 'react-native';\nimport { MediumAppText } from '../styles/text';\nimport SuggestionItem from './SuggestionItem';\nimport { useNavigation } from '@react-navigation/native';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Divider from './Divider'\n\nfunction SuggestionsList () {\n\n  const dispatch = useDispatch();\n  const suggestionListToDisplay = useSelector((state) => state.settings.suggestionSettings.suggestionsList);\n  const navigation = useNavigation();\n  const dailySuggestions = useSelector((state) => state.dailyInfo.suggestions);\n\n  function clickHandler (list, suggestion) {\n    if (!list.includes(suggestion)) {\n      dispatch({\n        type: \"ADDTO_SUGGESTIONS\",\n        payload: suggestion\n      });\n    } else {\n      dispatch({\n        type: \"REMOVEFROM_SUGGESTIONS\",\n        payload: suggestion\n      });\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.topcontainer}>\n        <MediumAppText onPress={() => navigation.navigate('ModifySuggestions')}>MY DAILY SUGGESTIONS</MediumAppText>\n      </View>\n      {/* <View style={styles.cog}>\n        <TouchableOpacity onPress={() => navigation.navigate('ModifySuggestions')}>\n          <Image style={styles.icons} source={require('../assets/cog.png')} />\n        </TouchableOpacity>\n      </View> */}\n      <View style={styles.suggestionWrapper}>\n        {suggestionListToDisplay.map(\n          suggestion =>\n          <SuggestionItem\n            key={suggestion}\n            name={suggestion}\n            clickHandler={clickHandler}\n            selected={dailySuggestions.includes(suggestion) ? true : false}\n          />\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  // cog: {\n  //   position: 'absolute',\n  //   right: 10,\n  //   top: 5,\n  // },\n  icons: {\n    height: 30,\n    width: 30,\n  },\n\n    \n  \n  topcontainer: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n\nexport default SuggestionsList;"]},"metadata":{},"sourceType":"module"}