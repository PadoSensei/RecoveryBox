{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionsVisuals.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport { MediumAppText, BoldAppText } from \"../styles/text\";\nimport Divider from \"./Divider\";\nimport { VictoryArea, VictoryChart, VictoryAxis } from 'victory';\nimport _ from 'lodash';\nimport { DateTime } from 'luxon';\nimport { Defs, LinearGradient, Stop } from \"react-native-svg\";\n\nfunction SuggestionsVisuals() {\n  var moodsToShow = 5;\n  var historicalData = useSelector(function (state) {\n    return state.historicalData;\n  });\n\n  var moodsData = _.map(historicalData, function (el) {\n    return el.suggestions;\n  });\n\n  function create(array) {\n    var obj = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(i), _step2; !(_step2 = _iterator2()).done;) {\n        var j = _step2.value;\n\n        if (Object.keys(obj).includes(j)) {\n          obj[j] = obj[j] + 1;\n        } else {\n          obj[j] = 1;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function createMoods(obj) {\n    var arr = [];\n\n    for (var i in obj) {\n      var newobj = {};\n      newobj.mood = i;\n      newobj.value = obj[i];\n      arr.push(newobj);\n    }\n\n    return arr;\n  }\n\n  function topFive(arr, num) {\n    var newArr = [];\n    var max = num;\n\n    for (var i = 0; i < max; i++) {\n      newArr.push(arr[i]);\n    }\n\n    return newArr;\n  }\n\n  function randomNumGen(arr, min, max) {\n    var copyArr = arr.slice();\n    max = Math.floor(max - 1);\n    var newArr = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      var choose = Math.floor(Math.random() * (max - min + 1)) + min;\n      newArr.push(copyArr.splice(choose, 1)[0]);\n      max--;\n    }\n\n    return newArr;\n  }\n\n  var moodsObject = create(moodsData);\n  var moods = createMoods(moodsObject);\n\n  var sortedMoods = _.orderBy(moods, ['value'], ['desc']);\n\n  var topMoods = topFive(sortedMoods, moodsToShow);\n  var randomTopMoods = randomNumGen(topMoods, 0, moodsToShow);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(BoldAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Your contentment level for a [week]\"), React.createElement(VictoryChart, {\n    width: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Defs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(LinearGradient, {\n    id: \"gradient1\",\n    x1: \"0%\",\n    y1: \"0%\",\n    x2: \"25%\",\n    x3: \"100%\",\n    y2: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(Stop, {\n    offset: \"0%\",\n    stopColor: \"#FF55B8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), React.createElement(Stop, {\n    offset: \"100%\",\n    stopColor: \"#FF8787\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))), React.createElement(VictoryArea, {\n    data: randomTopMoods,\n    x: \"mood\",\n    y: \"value\",\n    style: {\n      data: {\n        fill: 'url(#gradient1)'\n      },\n      parent: {}\n    },\n    interpolation: \"natural\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(VictoryAxis, {\n    tickCount: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    style: {\n      axis: {\n        stroke: '#DFE2E2',\n        opacity: 0.5\n      },\n      tickLabels: {\n        fontsize: 5,\n        color: 'blue'\n      }\n    },\n    tickCount: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default SuggestionsVisuals;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionsVisuals.js"],"names":["React","useSelector","MediumAppText","BoldAppText","Divider","VictoryArea","VictoryChart","VictoryAxis","_","DateTime","Defs","LinearGradient","Stop","SuggestionsVisuals","moodsToShow","historicalData","state","moodsData","map","el","suggestions","create","array","obj","i","j","Object","keys","includes","createMoods","arr","newobj","mood","value","push","topFive","num","newArr","max","randomNumGen","min","copyArr","slice","Math","floor","length","choose","random","splice","moodsObject","moods","sortedMoods","orderBy","topMoods","randomTopMoods","styles","container","data","fill","parent","axis","stroke","opacity","tickLabels","fontsize","color","StyleSheet"],"mappings":";;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,EAAwBC,WAAxB;AACA,OAAOC,OAAP;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,QAAuD,SAAvD;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,IAA9B,QAA0C,kBAA1C;;AAEA,SAASC,kBAAT,GAA+B;AAE7B,MAAMC,WAAW,GAAG,CAApB;AAGA,MAAMC,cAAc,GAAGd,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACD,cAAjB;AAAA,GAAD,CAAlC;;AACA,MAAME,SAAS,GAAGT,CAAC,CAACU,GAAF,CAAMH,cAAN,EAAsB,UAAAI,EAAE;AAAA,WAAIA,EAAE,CAACC,WAAP;AAAA,GAAxB,CAAlB;;AAEA,WAASC,MAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIC,GAAG,GAAG,EAAV;;AACA,yDAAcD,KAAd,wCAAqB;AAAA,UAAZE,CAAY;;AACnB,4DAAcA,CAAd,2CAAiB;AAAA,YAARC,CAAQ;;AACf,YAAIC,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,QAAjB,CAA0BH,CAA1B,CAAJ,EAAkC;AAChCF,UAAAA,GAAG,CAACE,CAAD,CAAH,GAASF,GAAG,CAACE,CAAD,CAAH,GAAO,CAAhB;AACD,SAFD,MAEO;AACLF,UAAAA,GAAG,CAACE,CAAD,CAAH,GAAQ,CAAR;AACD;AACF;AACF;;AACD,WAAOF,GAAP;AACD;;AAED,WAASM,WAAT,CAAsBN,GAAtB,EAA2B;AACzB,QAAIO,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIN,CAAT,IAAcD,GAAd,EAAmB;AACjB,UAAIQ,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACC,IAAP,GAAcR,CAAd;AACAO,MAAAA,MAAM,CAACE,KAAP,GAAeV,GAAG,CAACC,CAAD,CAAlB;AACAM,MAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT;AACD;;AACD,WAAOD,GAAP;AACD;;AAED,WAASK,OAAT,CAAkBL,GAAlB,EAAuBM,GAAvB,EAA4B;AAC1B,QAAIC,MAAM,GAAE,EAAZ;AACA,QAAIC,GAAG,GAAGF,GAAV;;AACA,SAAK,IAAIZ,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGc,GAAnB,EAAwBd,CAAC,EAAzB,EAA6B;AAC3Ba,MAAAA,MAAM,CAACH,IAAP,CAAYJ,GAAG,CAACN,CAAD,CAAf;AACD;;AACD,WAAOa,MAAP;AACD;;AAED,WAASE,YAAT,CAAuBT,GAAvB,EAA4BU,GAA5B,EAAiCF,GAAjC,EAAsC;AACpC,QAAIG,OAAO,GAAGX,GAAG,CAACY,KAAJ,EAAd;AACAJ,IAAAA,GAAG,GAAGK,IAAI,CAACC,KAAL,CAAWN,GAAG,GAAC,CAAf,CAAN;AACA,QAAID,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,GAAG,CAACe,MAAxB,EAAgCrB,CAAC,EAAjC,EAAoC;AAClC,UAAMsB,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACI,MAAL,MAAiBT,GAAG,GAAGE,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAA7D;AACAH,MAAAA,MAAM,CAACH,IAAP,CAAYO,OAAO,CAACO,MAAR,CAAeF,MAAf,EAAsB,CAAtB,EAAyB,CAAzB,CAAZ;AACAR,MAAAA,GAAG;AACJ;;AACD,WAAOD,MAAP;AACD;;AAED,MAAMY,WAAW,GAAG5B,MAAM,CAACJ,SAAD,CAA1B;AACA,MAAMiC,KAAK,GAAGrB,WAAW,CAACoB,WAAD,CAAzB;;AACA,MAAME,WAAW,GAAG3C,CAAC,CAAC4C,OAAF,CAAUF,KAAV,EAAiB,CAAC,OAAD,CAAjB,EAA4B,CAAC,MAAD,CAA5B,CAApB;;AACA,MAAMG,QAAQ,GAAGlB,OAAO,CAACgB,WAAD,EAAcrC,WAAd,CAAxB;AACA,MAAMwC,cAAc,GAAGf,YAAY,CAACc,QAAD,EAAW,CAAX,EAAcvC,WAAd,CAAnC;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,WAAnB;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,EAAE,EAAC,IAFL;AAGE,IAAA,EAAE,EAAC,KAHL;AAIE,IAAA,EAAE,EAAC,MAJL;AAKE,IAAA,EAAE,EAAC,MALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,IAAb;AAAkB,IAAA,SAAS,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADJ,EAaE,oBAAC,WAAD;AACA,IAAA,IAAI,EAAEF,cADN;AAEA,IAAA,CAAC,EAAC,MAFF;AAGA,IAAA,CAAC,EAAC,OAHF;AAIA,IAAA,KAAK,EAAE;AACLG,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADD;AAELC,MAAAA,MAAM,EAAE;AAFH,KAJP;AAQA,IAAA,aAAa,EAAC,SARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAuBE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAE,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,EA0BE,oBAAC,WAAD;AAAa,IAAA,aAAa,MAA1B;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AAACC,QAAAA,MAAM,EAAE,SAAT;AAAoBC,QAAAA,OAAO,EAAE;AAA7B,OADD;AAELC,MAAAA,UAAU,EAAE;AAACC,QAAAA,QAAQ,EAAC,CAAV;AAAaC,QAAAA,KAAK,EAAE;AAApB;AAFP,KADT;AAKE,IAAA,SAAS,EAAE,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CAFF,EAoCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CADF;AAwCD;;AAED,IAAMV,MAAM,GAAGW,UAAU,CAAC7C,MAAX,CAAkB;AAC/BmC,EAAAA,SAAS,EAAE;AADoB,CAAlB,CAAf;AAKA,eAAe3C,kBAAf","sourcesContent":["//https://formidable.com/open-source/victory/gallery/area-hover-styles\n\nimport React from 'react';\nimport { StyleSheet, View, Text, Image } from 'react-native';\nimport { useSelector} from \"react-redux\";\nimport { MediumAppText, BoldAppText } from '../styles/text'\nimport Divider from './Divider'\nimport { VictoryArea, VictoryChart, VictoryAxis } from 'victory';\nimport _ from 'lodash';\nimport { DateTime } from 'luxon'\nimport {Defs, LinearGradient, Stop } from \"react-native-svg\";\n\nfunction SuggestionsVisuals () {\n\n  const moodsToShow = 5;\n  // TODO make the number of moods you show customisable\n\n  const historicalData = useSelector((state) => state.historicalData);\n  const moodsData = _.map(historicalData, el => el.suggestions) \n  \n  function create (array) {\n    let obj = {}\n    for (let i of array) {\n      for (let j of i) {\n        if (Object.keys(obj).includes(j)) {\n          obj[j] = obj[j]+1\n        } else {\n          obj[j]= 1\n        }\n      }\n    }\n    return obj\n  }\n\n  function createMoods (obj) {\n    let arr = [];\n    for (let i in obj) {\n      let newobj = {}\n      newobj.mood = i\n      newobj.value = obj[i]\n      arr.push(newobj)\n    }\n    return arr;\n  }\n\n  function topFive (arr, num) {\n    let newArr= [];\n    let max = num;\n    for (let i =0; i < max; i++) {\n      newArr.push(arr[i]);\n    }\n    return newArr;\n  }\n\n  function randomNumGen (arr, min, max) {\n    let copyArr = arr.slice()\n    max = Math.floor(max-1);\n    let newArr = [];\n    for (let i = 0; i < arr.length; i++){\n      const choose = Math.floor(Math.random() * (max - min + 1)) + min;\n      newArr.push(copyArr.splice(choose,1)[0])\n      max-- \n    }\n    return newArr\n  }\n\n  const moodsObject = create(moodsData)\n  const moods = createMoods(moodsObject)\n  const sortedMoods = _.orderBy(moods, ['value'], ['desc'])\n  const topMoods = topFive(sortedMoods, moodsToShow)\n  const randomTopMoods = randomNumGen(topMoods, 0, moodsToShow)\n\n  return (\n    <View style={styles.container}>\n      <BoldAppText>Your contentment level for a [week]</BoldAppText>\n      <VictoryChart width={350} >\n          <Defs>\n            <LinearGradient id=\"gradient1\"\n              x1=\"0%\" \n              y1=\"0%\" \n              x2=\"25%\"\n              x3=\"100%\" \n              y2=\"100%\"\n            >\n              <Stop offset=\"0%\" stopColor='#FF55B8'/>\n              <Stop offset=\"100%\" stopColor='#FF8787'/>\n            </LinearGradient>\n          </Defs>\n        <VictoryArea \n        data={randomTopMoods} \n        x=\"mood\" \n        y=\"value\"\n        style={{ \n          data: { fill: 'url(#gradient1)' },\n          parent: {}\n          }}\n        interpolation=\"natural\"\n        />\n        <VictoryAxis\n          tickCount={3}\n        />\n        <VictoryAxis dependentAxis\n          style={{\n            axis: {stroke: '#DFE2E2', opacity: 0.5},\n            tickLabels: {fontsize:5, color: 'blue'},\n          }}\n          tickCount={2}\n        />\n      </VictoryChart>\n      <Divider/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  },\n});\n\nexport default SuggestionsVisuals;"]},"metadata":{},"sourceType":"module"}