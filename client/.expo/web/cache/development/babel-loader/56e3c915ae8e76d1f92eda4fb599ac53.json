{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Calendar.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Calendar } from 'react-native-calendars';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from '@react-navigation/native';\nimport colors from \"../styles/colors\";\n\nfunction CalendarDH() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var now = useSelector(function (state) {\n    return state.helper.now;\n  });\n  var selectedDate = useSelector(function (state) {\n    return state.helper.selectedDate;\n  });\n  var navigation = useNavigation();\n\n  var pressHandler = function pressHandler(arg) {\n    dispatch({\n      type: 'SELECT_DATE',\n      payload: arg\n    });\n    navigation.navigate('History');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Calendar, {\n    current: now,\n    minDate: '2019-05-10',\n    maxDate: now,\n    onDayPress: function onDayPress(day) {\n      pressHandler(day.timestamp);\n    },\n    monthFormat: 'MMMM yyyy',\n    hideArrows: false,\n    renderArrow: function renderArrow(direction) {\n      if (direction === 'right') return React.createElement(Image, {\n        source: require(\"../assets/forward\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 43\n        }\n      });\n      if (direction === 'left') return React.createElement(Image, {\n        source: require(\"../assets/back\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }\n      });\n    },\n    hideExtraDays: false,\n    disableMonthChange: true,\n    firstDay: 1,\n    hideDayNames: false,\n    showWeekNumbers: false,\n    onPressArrowLeft: function onPressArrowLeft(subtractMonth) {\n      return subtractMonth();\n    },\n    onPressArrowRight: function onPressArrowRight(addMonth) {\n      return addMonth();\n    },\n    disableArrowLeft: false,\n    disableArrowRight: false,\n    disableAllTouchEventsForDisabledDays: true,\n    enableSwipeMonths: true,\n    theme: {\n      textDayFontFamily: 'Montserrat_500Medium',\n      textMonthFontFamily: 'Montserrat_700Bold',\n      textDayHeaderFontFamily: 'Montserrat_700Bold',\n      textDayFontSize: 14,\n      textMonthFontSize: 18\n    },\n    markedDates: {\n      '2020-09-17': {\n        marked: true,\n        dotColor: colors.green\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 70,\n    alignSelf: 'center'\n  }\n});\nexport default CalendarDH;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Calendar.js"],"names":["React","Calendar","useSelector","useDispatch","useNavigation","colors","CalendarDH","dispatch","now","state","helper","selectedDate","navigation","pressHandler","arg","type","payload","navigate","styles","container","day","timestamp","direction","require","subtractMonth","addMonth","textDayFontFamily","textMonthFontFamily","textDayHeaderFontFamily","textDayFontSize","textMonthFontSize","marked","dotColor","green","StyleSheet","create","marginTop","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport {Calendar } from 'react-native-calendars'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from '@react-navigation/native';\nimport colors from '../styles/colors';\n\nfunction CalendarDH() {\n\n  const dispatch = useDispatch();\n  const now = useSelector((state) => state.helper.now)\n  const selectedDate = useSelector((state) => state.helper.selectedDate)\n\n  const navigation = useNavigation();\n\n  const pressHandler = (arg) => {\n    dispatch({\n      type: 'SELECT_DATE',\n      payload: arg\n    });\n    navigation.navigate('History');\n  }\n\n//TODO add a function which maps through dates where there are entries, converts them and marks them with dots\n\n  return (\n    <View style={styles.container}>\n      <Calendar\n        current={now}\n        minDate={'2019-05-10'}\n        maxDate={now}\n        // Handler which gets executed on day press. Default = undefined\n        onDayPress={(day) => {pressHandler(day.timestamp)}}\n        monthFormat={'MMMM yyyy'}\n          hideArrows={false}\n          // Replace default arrows with custom ones (direction can be 'left' or 'right')\n        renderArrow={(direction) => {\n          if (direction==='right') return <Image source={require('../assets/forward')}/>\n          if (direction==='left') return <Image source={require('../assets/back')}/>\n          }}\n        hideExtraDays={false}\n        disableMonthChange={true}\n        firstDay={1}\n        hideDayNames={false}\n        showWeekNumbers={false}\n        onPressArrowLeft={subtractMonth => subtractMonth()}\n        onPressArrowRight={addMonth => addMonth()}\n        disableArrowLeft={false}\n        disableArrowRight={false}\n        disableAllTouchEventsForDisabledDays={true}\n        enableSwipeMonths={true}\n        theme={{\n          textDayFontFamily: 'Montserrat_500Medium',\n          textMonthFontFamily: 'Montserrat_700Bold',\n          textDayHeaderFontFamily: 'Montserrat_700Bold',\n          textDayFontSize: 14,\n          textMonthFontSize: 18,\n\n        }}\n        markedDates={{\n          '2020-09-17': {marked: true, dotColor: colors.green},\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 70,\n    alignSelf: 'center',\n  },\n});\n\nexport default CalendarDH;"]},"metadata":{},"sourceType":"module"}