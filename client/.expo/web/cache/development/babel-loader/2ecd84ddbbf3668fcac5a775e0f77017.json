{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Feeling.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MediumAppText } from \"../styles/text\";\nimport Divider from \"../components/Divider\";\nimport Slider from '@react-native-community/slider';\n\nfunction Feeling() {\n  var _useState = useState(5),\n      _useState2 = _slicedToArray(_useState, 2),\n      sliderValue = _useState2[0],\n      setSliderValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sliderCompletionValue = _useState4[0],\n      setSliderCompletionValue = _useState4[1];\n\n  console.log(sliderValue);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(MediumAppText, {\n    style: {\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"How are you feeling today?\"), React.createElement(Slider, {\n    style: {\n      width: 200,\n      height: 40\n    },\n    minimumValue: 0,\n    step: 1,\n    maximumValue: 10,\n    minimumTrackTintColor: \"blue\",\n    maximumTrackTintColor: \"#000000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, sliderValue), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default Feeling;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Feeling.js"],"names":["React","useState","useDispatch","useSelector","MediumAppText","Divider","Slider","Feeling","sliderValue","setSliderValue","sliderCompletionValue","setSliderCompletionValue","console","log","styles","container","fontSize","width","height","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,aAAT;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,SAASC,OAAT,GAAoB;AAAA,kBAEoBN,QAAQ,CAAC,CAAD,CAF5B;AAAA;AAAA,MAEXO,WAFW;AAAA,MAEEC,cAFF;;AAAA,mBAGwCR,QAAQ,CAAC,KAAD,CAHhD;AAAA;AAAA,MAGXS,qBAHW;AAAA,MAGYC,wBAHZ;;AAIlBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE;AAArB,KADT;AAEE,IAAA,YAAY,EAAE,CAFhB;AAGE,IAAA,IAAI,EAAE,CAHR;AAIE,IAAA,YAAY,EAAE,EAJhB;AAKE,IAAA,qBAAqB,EAAC,MALxB;AAME,IAAA,qBAAqB,EAAC,SANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,WAAP,CAVF,EAWE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD;;AAED,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AADoB,CAAlB,CAAf;AAOA,eAAeR,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, Image } from 'react-native';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { MediumAppText } from '../styles/text'\nimport Divider from '../components/Divider'\nimport Slider from '@react-native-community/slider';\n\nfunction Feeling () {\n\n  const [sliderValue, setSliderValue] = useState(5)\n  const [sliderCompletionValue, setSliderCompletionValue] = useState(false)\n  console.log(sliderValue)\n\n  return (\n    <View style={styles.container}>\n      <MediumAppText style={{fontSize: 16}}>How are you feeling today?</MediumAppText>\n      <Slider\n        style={{width: 200, height: 40}}\n        minimumValue={0}\n        step={1}\n        maximumValue={10}\n        minimumTrackTintColor=\"blue\"\n        maximumTrackTintColor=\"#000000\"\n      />\n      <Text>{sliderValue}</Text>\n      <Divider/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  },\n});\n\n\n\nexport default Feeling;"]},"metadata":{},"sourceType":"module"}