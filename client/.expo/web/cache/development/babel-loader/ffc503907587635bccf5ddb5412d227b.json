{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Moods.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BoldAppText, MediumAppText } from \"../styles/text\";\nimport { Picker } from '@react-native-community/picker';\nimport Divider from \"./Divider\";\n\nfunction Moods() {\n  var Item = Picker.Item;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateOne = _useState2[0],\n      setStateOne = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateTwo = _useState4[0],\n      setStateTwo = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stateThree = _useState6[0],\n      setStateThree = _useState6[1];\n\n  var currentMoods = useSelector(function (state) {\n    return state.dailyInfo.moods;\n  });\n  var moodAggregator = [stateOne, stateTwo, stateThree];\n\n  function submitHandler(arg) {\n    var moodsFilter = arg.filter(function (mood) {\n      return mood !== false;\n    });\n    var moodsLowercase = [];\n    moodsFilter.forEach(function (mood) {\n      return moodsLowercase.push(mood.toLowerCase());\n    });\n    var moods = moodsLowercase.filter(function (mood) {\n      return !currentMoods.includes(mood);\n    });\n    dispatch({\n      type: 'UPDATE_MOODS',\n      payload: moods\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(BoldAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Select a set of moods for today\"), React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Are you feeling good?\"), React.createElement(Picker, {\n    selectedValue: stateOne,\n    style: {\n      height: 50,\n      width: 100\n    },\n    mode: \"dropdown\",\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setStateOne(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Item, {\n    label: \"Select a mood...\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Happy\",\n    value: \"Happy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Positive\",\n    value: \"Positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Energetic\",\n    value: \"Energetic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Calm\",\n    value: \"Calm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Or are things a little bit tough?\"), React.createElement(Picker, {\n    selectedValue: stateTwo,\n    style: {\n      height: 50,\n      width: 100\n    },\n    mode: \"dropdown\",\n    onValueChange: function onValueChange(v, itemIndex) {\n      return setStateTwo(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Item, {\n    label: \"Select a mood...\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Anxious\",\n    value: \"Anxious\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Worried\",\n    value: \"Worried\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Stressed\",\n    value: \"Stressed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"You can input any other moods here...\"), React.createElement(TextInput, {\n    placeholder: \"Enter a mood\",\n    value: stateThree ? stateThree : '',\n    onChangeText: function onChangeText(text) {\n      return setStateThree(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return submitHandler(moodAggregator);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Register your moods for today\"))), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    width: '10%',\n    height: 50,\n    borderRadius: 5,\n    marginHorizontal: 20,\n    backgroundColor: '#ADF1FF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Moods;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Moods.js"],"names":["React","useState","useDispatch","useSelector","BoldAppText","MediumAppText","Picker","Divider","Moods","Item","dispatch","stateOne","setStateOne","stateTwo","setStateTwo","stateThree","setStateThree","currentMoods","state","dailyInfo","moods","moodAggregator","submitHandler","arg","moodsFilter","filter","mood","moodsLowercase","forEach","push","toLowerCase","includes","type","payload","styles","container","wrapper","height","width","itemValue","itemIndex","v","text","button","StyleSheet","create","borderRadius","marginHorizontal","backgroundColor","alignItems","justifyContent","flex","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, TextInput } from 'react-native';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { BoldAppText, MediumAppText } from '../styles/text'\nimport {Picker} from '@react-native-community/picker';\nimport Divider from './Divider'\n\nfunction Moods () {\n \n  const Item = Picker.Item;\n\n  const dispatch = useDispatch()\n  const [stateOne, setStateOne] = useState(false)\n  const [stateTwo, setStateTwo] = useState(false)\n  const [stateThree, setStateThree] = useState(false)\n  const currentMoods = useSelector((state) => state.dailyInfo.moods)\n\n  const moodAggregator = [stateOne, stateTwo, stateThree]\n\n  function submitHandler (arg) {\n    const moodsFilter = arg.filter(mood => mood !== false)\n    let moodsLowercase = [];\n    moodsFilter.forEach(mood => moodsLowercase.push(mood.toLowerCase()))\n    const moods = moodsLowercase.filter(mood => !currentMoods.includes(mood))\n    dispatch({\n      type: 'UPDATE_MOODS',\n      payload: moods\n    })\n  }\n\n  return (\n    <View style={styles.container}>\n      <BoldAppText>Select a set of moods for today</BoldAppText>\n      <View style={styles.wrapper}>\n      <MediumAppText>Are you feeling good?</MediumAppText>\n      <Picker\n        selectedValue={stateOne}\n        style={{height: 50, width: 100}}\n        mode=\"dropdown\"\n        onValueChange={(itemValue, itemIndex) =>\n        setStateOne(itemValue)\n      }>\n        <Item label=\"Select a mood...\" value='' />\n        <Item label=\"Happy\" value=\"Happy\" />\n        <Item label=\"Positive\" value=\"Positive\" />\n        <Item label=\"Energetic\" value=\"Energetic\" />\n        <Item label=\"Calm\" value=\"Calm\" />\n      </Picker>\n      </View>\n      <View style={styles.wrapper}>\n      <MediumAppText>Or are things a little bit tough?</MediumAppText>\n      <Picker\n        selectedValue={stateTwo}\n        style={{height: 50, width: 100}}\n        mode=\"dropdown\"\n        onValueChange={(v, itemIndex) =>\n        setStateTwo(v)\n      }>\n        <Item label=\"Select a mood...\" value='' />\n        <Item label=\"Anxious\" value=\"Anxious\" />\n        <Item label=\"Worried\" value=\"Worried\" />\n        <Item label=\"Stressed\" value=\"Stressed\" />\n      </Picker>\n      </View>\n      <View style={styles.wrapper}>\n      <MediumAppText>You can input any other moods here...</MediumAppText>\n      <TextInput\n        placeholder='Enter a mood'\n        value= {stateThree ? stateThree : ''}\n        onChangeText={text => setStateThree(text)}\n      />\n      </View>\n      <View style={styles.wrapper}>\n      <TouchableOpacity style={styles.button} onPress={() => submitHandler(moodAggregator)}>\n        <MediumAppText>Register your moods for today</MediumAppText>\n      </TouchableOpacity>\n      </View>\n      <Divider/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    width: '10%',\n    height: 50,\n    borderRadius: 5,\n    marginHorizontal: 20,\n    backgroundColor: '#ADF1FF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\n\nexport default Moods;"]},"metadata":{},"sourceType":"module"}