{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/HomeScreen.js\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HomeWelcome from \"../components/HomeWelcome\";\nimport Feeling from \"../components/Feeling\";\nimport Moods from \"../components/Moods\";\nimport Meetings from \"../components/Meetings\";\nimport SuggestionsList from \"../components/SuggestionsList\";\nimport InspirationalQuote from \"../components/InspirationalQuote\";\nimport ApiService from \"../ApiService\";\nimport { AppLoading } from 'expo';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DateTime } from 'luxon';\n\nfunction HomeScreen() {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    ApiService.getQuote().then(function (quote) {\n      return dispatch({\n        type: \"UPDATE_QUOTE\",\n        payload: quote\n      });\n    });\n  }, []);\n  var quoteItem = useSelector(function (state) {\n    return state.dailyQuote.todaysQuote;\n  });\n  var fullHistoricalInfo = useSelector(function (state) {\n    return state.historicalData;\n  });\n  var dailyInfo = useSelector(function (state) {\n    return state.dailyInfo;\n  });\n  var todaysDate = useSelector(function (state) {\n    return state.helper.now;\n  });\n\n  function clickHandler(arg) {\n    arg.date = DateTime.fromMillis(todaysDate).toUTC().startOf('day');\n    dispatch({\n      type: \"UPDATE_HISTORICALDATA_WITH_DAILYINFO\",\n      payload: arg\n    });\n    console.log(fullHistoricalInfo);\n  }\n\n  return !quoteItem ? React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }) : React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeWelcome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(InspirationalQuote, {\n    quote: quoteItem[0].q,\n    author: quoteItem[0].a,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(Meetings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Feeling, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(SuggestionsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Moods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return clickHandler(dailyInfo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Submit your data for the day\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    textAlign: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  button: {\n    width: '20%',\n    height: 50,\n    borderRadius: 5,\n    marginHorizontal: 20,\n    backgroundColor: '#FFF4E4',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  wrapper: {\n    alignItems: 'center',\n    marginTop: 5\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/HomeScreen.js"],"names":["React","useEffect","HomeWelcome","Feeling","Moods","Meetings","SuggestionsList","InspirationalQuote","ApiService","AppLoading","useDispatch","useSelector","DateTime","HomeScreen","dispatch","getQuote","then","quote","type","payload","quoteItem","state","dailyQuote","todaysQuote","fullHistoricalInfo","historicalData","dailyInfo","todaysDate","helper","now","clickHandler","arg","date","fromMillis","toUTC","startOf","console","log","styles","container","q","a","wrapper","button","StyleSheet","create","flex","textAlign","justifyContent","backgroundColor","width","height","borderRadius","marginHorizontal","alignItems","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\nimport HomeWelcome from '../components/HomeWelcome'\nimport Feeling from '../components/Feeling'\nimport Moods from '../components/Moods'\nimport Meetings from '../components/Meetings'\nimport SuggestionsList from '../components/SuggestionsList'\nimport InspirationalQuote from '../components/InspirationalQuote'\nimport ApiService from '../ApiService'\nimport { AppLoading } from 'expo';\nimport {useDispatch, useSelector } from \"react-redux\";\nimport {DateTime} from 'luxon';\n\nfunction HomeScreen () {\n\n  // TODO:  use react query\n  const dispatch = useDispatch();\n  useEffect(() => {\n    ApiService.getQuote()\n    .then(quote => \n      dispatch({\n        type: \"UPDATE_QUOTE\",\n        payload: quote\n      })\n    )\n  },[])\n  \n  const quoteItem = useSelector((state) => state.dailyQuote.todaysQuote);\n\n  const fullHistoricalInfo = useSelector((state) => state.historicalData);\n  const dailyInfo = useSelector((state) => state.dailyInfo);\n  const todaysDate = useSelector((state) => state.helper.now);\n\n  function clickHandler (arg) {\n    arg.date = DateTime.fromMillis(todaysDate).toUTC().startOf('day')\n    dispatch({\n      type: \"UPDATE_HISTORICALDATA_WITH_DAILYINFO\",\n      payload: arg\n    })\n    console.log(fullHistoricalInfo)\n  }\n\n  return (\n    !quoteItem ?\n    <AppLoading/>\n    :\n    <View style={styles.container}>\n      <HomeWelcome/>\n      <InspirationalQuote quote={quoteItem[0].q} author={quoteItem[0].a}/>\n      <Meetings/>\n      <Feeling/>\n      <SuggestionsList/>\n      <Moods/>\n      <View style={styles.wrapper}>\n        <TouchableOpacity style={styles.button} onPress={() => clickHandler(dailyInfo)}>\n          <Text>Submit your data for the day</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    textAlign: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n  },\n  button: {\n    width: '20%',\n    height: 50,\n    borderRadius: 5,\n    marginHorizontal: 20,\n    backgroundColor: '#FFF4E4',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  wrapper: {\n    alignItems: 'center',\n    marginTop: 5,\n  },\n\n});\n\n\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}