{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionItem.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector } from 'react-redux';\nimport colors from \"../styles/colors\";\nimport { MediumAppText, BoldAppText } from \"../styles/text\";\n\nfunction SuggestionItem(_ref) {\n  var name = _ref.name,\n      clickHandler = _ref.clickHandler,\n      selected = _ref.selected;\n  var dailySuggestions = useSelector(function (state) {\n    return state.dailyInfo.suggestions;\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      clickHandler(dailySuggestions, name);\n    },\n    style: selected ? styles.selectedButton : styles.unselectedButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, selected ? React.createElement(Image, {\n    style: styles.tick,\n    source: require(\"../assets/tick.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }) : React.createElement(React.Fragment, null)), React.createElement(MediumAppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, name));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginHorizontal: 5,\n    minWidth: 55\n  },\n  unselectedButton: {\n    width: 25,\n    height: 25,\n    borderRadius: 50,\n    marginHorizontal: 20,\n    marginBottom: 10,\n    backgroundColor: colors.lightWarmGray,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedButton: {\n    width: 30,\n    height: 30,\n    borderRadius: 50,\n    marginHorizontal: 20,\n    marginBottom: 5,\n    backgroundColor: colors.green,\n    opacity: 0.9,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tick: {\n    width: 15,\n    height: 15\n  },\n  text: {\n    fontSize: 10,\n    marginBottom: 5,\n    textAlign: 'center'\n  }\n});\nexport default SuggestionItem;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionItem.js"],"names":["React","useSelector","colors","MediumAppText","BoldAppText","SuggestionItem","name","clickHandler","selected","dailySuggestions","state","dailyInfo","suggestions","styles","container","selectedButton","unselectedButton","tick","require","text","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","marginHorizontal","minWidth","width","height","borderRadius","marginBottom","lightWarmGray","green","opacity","fontSize","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP;AACA,SAASC,aAAT,EAAwBC,WAAxB;;AAEA,SAASC,cAAT,OAA0D;AAAA,MAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,MAA1BC,YAA0B,QAA1BA,YAA0B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAExD,MAAMC,gBAAgB,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,SAAN,CAAgBC,WAA3B;AAAA,GAAD,CAApC;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AAACP,MAAAA,YAAY,CAACE,gBAAD,EAAmBH,IAAnB,CAAZ;AAAqC,KADvD;AAEE,IAAA,KAAK,EAAEE,QAAQ,GAAEK,MAAM,CAACE,cAAT,GAA0BF,MAAM,CAACG,gBAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGR,QAAQ,GAAG,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEK,MAAM,CAACI,IAArB;AAA2B,IAAA,MAAM,EAAEC,OAAO,sBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyE,yCAJpF,CADF,EAOE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,MAAM,CAACM,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCb,IAApC,CAPF,CADF;AAWD;;AAED,IAAMO,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE,YALP;AAMTC,IAAAA,gBAAgB,EAAE,CANT;AAOTC,IAAAA,QAAQ,EAAE;AAPD,GADoB;AAU/BZ,EAAAA,gBAAgB,EAAE;AAChBa,IAAAA,KAAK,EAAE,EADS;AAEhBC,IAAAA,MAAM,EAAE,EAFQ;AAGhBC,IAAAA,YAAY,EAAE,EAHE;AAIhBJ,IAAAA,gBAAgB,EAAE,EAJF;AAKhBK,IAAAA,YAAY,EAAC,EALG;AAMhBR,IAAAA,eAAe,EAAEtB,MAAM,CAAC+B,aANR;AAOhBR,IAAAA,UAAU,EAAE,QAPI;AAQhBC,IAAAA,cAAc,EAAE;AARA,GAVa;AAoB/BX,EAAAA,cAAc,EAAE;AACdc,IAAAA,KAAK,EAAE,EADO;AAEdC,IAAAA,MAAM,EAAE,EAFM;AAGdC,IAAAA,YAAY,EAAE,EAHA;AAIdJ,IAAAA,gBAAgB,EAAE,EAJJ;AAKdK,IAAAA,YAAY,EAAC,CALC;AAMdR,IAAAA,eAAe,EAAEtB,MAAM,CAACgC,KANV;AAOdC,IAAAA,OAAO,EAAE,GAPK;AAQdV,IAAAA,UAAU,EAAE,QARE;AASdC,IAAAA,cAAc,EAAE;AATF,GApBe;AA+B/BT,EAAAA,IAAI,EAAE;AACJY,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GA/ByB;AAmC/BX,EAAAA,IAAI,EAAE;AACJiB,IAAAA,QAAQ,EAAE,EADN;AAEJJ,IAAAA,YAAY,EAAE,CAFV;AAGJK,IAAAA,SAAS,EAAC;AAHN;AAnCyB,CAAlB,CAAf;AA0CA,eAAehC,cAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport colors from '../styles/colors'\nimport { MediumAppText, BoldAppText } from '../styles/text'\n\nfunction SuggestionItem({ name, clickHandler, selected }) {\n\n  const dailySuggestions = useSelector((state) => state.dailyInfo.suggestions)\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity \n        onPress={() => {clickHandler(dailySuggestions, name)}}\n        style={selected? styles.selectedButton : styles.unselectedButton}\n      >\n        {selected ? <Image style={styles.tick} source={require('../assets/tick.png')}/> : <></>}\n      </TouchableOpacity>\n      <MediumAppText style={styles.text}>{name}</MediumAppText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginHorizontal: 5,\n    minWidth: 55\n  },\n  unselectedButton: {\n    width: 25,\n    height: 25,\n    borderRadius: 50,\n    marginHorizontal: 20,\n    marginBottom:10,\n    backgroundColor: colors.lightWarmGray,\n    alignItems: 'center',\n    justifyContent: 'center', \n  },\n  selectedButton: {\n    width: 30,\n    height: 30,\n    borderRadius: 50,\n    marginHorizontal: 20,\n    marginBottom:5,\n    backgroundColor: colors.green,\n    opacity: 0.9,\n    alignItems: 'center',\n    justifyContent: 'center', \n  },\n  tick: {\n    width: 15,\n    height: 15,\n  }, \n  text: {\n    fontSize: 10, \n    marginBottom: 5, \n    textAlign:'center',\n  },\n});\n\nexport default SuggestionItem;"]},"metadata":{},"sourceType":"module"}