{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/HomeScreen.js\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport HomeWelcome from \"../components/HomeWelcome\";\nimport Feeling from \"../components/Feeling\";\nimport Moods from \"../components/Moods\";\nimport Meetings from \"../components/Meetings\";\nimport SuggestionsList from \"../components/SuggestionsList\";\nimport Footer from \"../components/Footer\";\nimport InspirationalQuote from \"../components/InspirationalQuote\";\nimport ApiService from \"../ApiService\";\nimport { AppLoading } from 'expo';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DateTime } from 'luxon';\nimport colors from \"../styles/colors\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport CalendarScreen from \"./CalendarScreen\";\n\nfunction HomeScreen() {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    ApiService.getQuote().then(function (quote) {\n      return dispatch({\n        type: \"UPDATE_QUOTE\",\n        payload: quote\n      });\n    });\n  }, []);\n  var quoteItem = useSelector(function (state) {\n    return state.dailyQuote.todaysQuote;\n  });\n  var fullHistoricalInfo = useSelector(function (state) {\n    return state.historicalData;\n  });\n  var dailyInfo = useSelector(function (state) {\n    return state.dailyInfo;\n  });\n  var todaysDate = useSelector(function (state) {\n    return state.helper.now;\n  });\n  var userId = useSelector(function (state) {\n    return state.user.id;\n  });\n  console.log(fullHistoricalInfo);\n\n  function clickHandler(arg) {\n    arg.date = DateTime.fromMillis(todaysDate).toUTC().startOf('day').ts;\n    createDailyData(arg);\n    dispatch({\n      type: \"UPDATE_HISTORICALDATA_WITH_DAILYINFO\",\n      payload: arg\n    });\n  }\n\n  function createDailyData(dailyData) {\n    ApiService.postDailyData({\n      date: dailyData.date,\n      meetings: dailyData.meetings,\n      feeling: dailyData.feeling,\n      moods: JSON.stringify(dailyData.moods),\n      suggestions: JSON.stringify(dailyData.suggestions),\n      UserId: userId\n    }).then(function (data) {\n      var objToDispatch = {};\n    });\n  }\n\n  ;\n  var Tab = createBottomTabNavigator();\n  return !quoteItem ? React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapperZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(Meetings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.wrapperOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Feeling, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.wrapperTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(SuggestionsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.wrapperTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Moods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return clickHandler(dailyInfo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Submit your data for the day\")))), React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.platinum\n  },\n  button: {\n    width: '20%',\n    height: 50,\n    borderRadius: 5,\n    marginHorizontal: 20,\n    backgroundColor: '#FFF4E4',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  wrapperZero: {\n    flexDirection: 'row',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    margin: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12\n  },\n  wrapperOne: {\n    flexDirection: 'row',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    marginTop: 1,\n    marginBottom: 10,\n    marginRight: 10,\n    marginLeft: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12\n  },\n  wrapperTwo: {\n    flexDirection: 'row',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    marginTop: 1,\n    marginBottom: 10,\n    marginRight: 10,\n    marginLeft: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12\n  },\n  wrapper: {\n    alignItems: 'center',\n    marginTop: 5\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/HomeScreen.js"],"names":["React","useEffect","HomeWelcome","Feeling","Moods","Meetings","SuggestionsList","Footer","InspirationalQuote","ApiService","AppLoading","useDispatch","useSelector","DateTime","colors","NavigationContainer","createBottomTabNavigator","CalendarScreen","HomeScreen","dispatch","getQuote","then","quote","type","payload","quoteItem","state","dailyQuote","todaysQuote","fullHistoricalInfo","historicalData","dailyInfo","todaysDate","helper","now","userId","user","id","console","log","clickHandler","arg","date","fromMillis","toUTC","startOf","ts","createDailyData","dailyData","postDailyData","meetings","feeling","moods","JSON","stringify","suggestions","UserId","data","objToDispatch","Tab","styles","container","wrapperZero","wrapperOne","wrapperTwo","wrapper","button","StyleSheet","create","flex","backgroundColor","platinum","width","height","borderRadius","marginHorizontal","alignItems","justifyContent","flexDirection","elevation","margin","paddingHorizontal","paddingVertical","marginTop","marginBottom","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, ScrollView } from 'react-native';\nimport HomeWelcome from '../components/HomeWelcome'\nimport Feeling from '../components/Feeling'\nimport Moods from '../components/Moods'\nimport Meetings from '../components/Meetings'\nimport SuggestionsList from '../components/SuggestionsList'\nimport Footer from '../components/Footer'\nimport InspirationalQuote from '../components/InspirationalQuote'\nimport ApiService from '../ApiService'\nimport { AppLoading } from 'expo';\nimport {useDispatch, useSelector } from \"react-redux\";\nimport {DateTime} from 'luxon';\nimport colors from '../styles/colors'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport CalendarScreen from './CalendarScreen'\n\n\nfunction HomeScreen () {\n\n  // TODO:  use react query\n  const dispatch = useDispatch();\n  useEffect(() => {\n    ApiService.getQuote()\n    .then(quote => \n      dispatch({\n        type: \"UPDATE_QUOTE\",\n        payload: quote\n      })\n    )\n  },[])\n\n\n  \n  const quoteItem = useSelector((state) => state.dailyQuote.todaysQuote);\n\n  const fullHistoricalInfo = useSelector((state) => state.historicalData);\n  const dailyInfo = useSelector((state) => state.dailyInfo);\n  const todaysDate = useSelector((state) => state.helper.now);\n  const userId = useSelector((state) => state.user.id);\n  console.log(fullHistoricalInfo)\n\n  function clickHandler (arg) {\n    arg.date = DateTime.fromMillis(todaysDate).toUTC().startOf('day').ts\n    createDailyData(arg)\n    dispatch({\n      type: \"UPDATE_HISTORICALDATA_WITH_DAILYINFO\",\n      payload: arg\n    })\n  }\n\n//TODO refactor the data flow, there must be a better way to do this\n  function createDailyData (dailyData) {\n    ApiService.postDailyData( {\n      date: dailyData.date,\n      meetings: dailyData.meetings,\n      feeling: dailyData.feeling,\n      moods: JSON.stringify(dailyData.moods),\n      suggestions: JSON.stringify(dailyData.suggestions),\n      UserId: userId,\n    })\n    .then(data => {\n      let objToDispatch = {}\n\n            // dispatch({\n      //   type: \"UPDATE_HISTORICALDATA_WITH_DAILYINFO\",\n      //   payload: data\n      // })\n    })\n  };\n\n//TODO make sure the user can only submit the data once, if they try and submit twice it warns them and then it updates the existing information for that date\n\n  const Tab = createBottomTabNavigator();\n\n\n  return (\n    !quoteItem ?\n    <AppLoading/>\n    :\n    <View>\n    <ScrollView style={styles.container}>        \n      <View style={styles.wrapperZero}>\n        <Meetings/>\n      </View>\n      {/* <InspirationalQuote quote={quoteItem[0].q} author={quoteItem[0].a}/> */}\n      <View style={styles.wrapperOne}> \n        <Feeling/>\n      </View>\n      <View style={styles.wrapperTwo}>\n        <SuggestionsList/>\n      </View>  \n      <View style={styles.wrapperTwo}>\n        <Moods/>\n      </View>\n      <View style={styles.wrapper}>\n        <TouchableOpacity style={styles.button} onPress={() => clickHandler(dailyInfo)}>\n          <Text>Submit your data for the day</Text>\n        </TouchableOpacity>\n      </View>\n      \n    </ScrollView>\n    <Footer/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.platinum,\n  },\n  button: {\n    width: '20%',\n    height: 50,\n    borderRadius: 5,\n    marginHorizontal: 20,\n    backgroundColor: '#FFF4E4',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  wrapperZero: {\n    flexDirection: 'row',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    margin: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  wrapperOne: {\n    flexDirection: 'row',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    marginTop: 1,\n    marginBottom: 10,\n    marginRight: 10,\n    marginLeft: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  wrapperTwo: {\n    flexDirection: 'row',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    marginTop: 1,\n    marginBottom: 10,\n    marginRight: 10,\n    marginLeft: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  wrapper: {\n    alignItems: 'center',\n    marginTop: 5,\n  },\n\n});\n\n\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}