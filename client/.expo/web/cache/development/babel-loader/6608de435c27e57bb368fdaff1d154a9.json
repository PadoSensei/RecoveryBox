{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Calendar.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Calendar } from 'react-native-calendars';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction CalendarDH() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var now = useSelector(function (state) {\n    return state.helper.now;\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Calendar, {\n    current: now,\n    minDate: '2019-05-10',\n    maxDate: now,\n    onDayPress: function onDayPress(day) {\n      dispatch({\n        type: 'SELECT_DATE',\n        payload: day.timestamp\n      });\n    },\n    monthFormat: 'MMMM yyyy',\n    hideArrows: false,\n    renderArrow: function renderArrow(direction) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 34\n        }\n      }, \"Go\");\n    },\n    hideExtraDays: false,\n    disableMonthChange: true,\n    firstDay: 1,\n    hideDayNames: false,\n    showWeekNumbers: false,\n    onPressArrowLeft: function onPressArrowLeft(subtractMonth) {\n      return subtractMonth();\n    },\n    onPressArrowRight: function onPressArrowRight(addMonth) {\n      return addMonth();\n    },\n    disableArrowLeft: false,\n    disableArrowRight: false,\n    disableAllTouchEventsForDisabledDays: true,\n    enableSwipeMonths: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 70,\n    height: 500,\n    width: 300,\n    flex: 1,\n    alignSelf: 'center'\n  }\n});\nexport default CalendarDH;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Calendar.js"],"names":["React","Calendar","useSelector","useDispatch","CalendarDH","dispatch","now","state","helper","styles","container","day","type","payload","timestamp","direction","subtractMonth","addMonth","StyleSheet","create","marginTop","height","width","flex","alignSelf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,QAAR,QAAwB,wBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,MAAMG,GAAG,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAN,CAAaF,GAAxB;AAAA,GAAD,CAAvB;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACA,IAAA,OAAO,EAAEJ,GADT;AAEA,IAAA,OAAO,EAAE,YAFT;AAGA,IAAA,OAAO,EAAEA,GAHT;AAKA,IAAA,UAAU,EAAE,oBAACK,GAAD,EAAS;AACnBN,MAAAA,QAAQ,CAAC;AACTO,QAAAA,IAAI,EAAE,aADG;AAETC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFJ,OAAD,CAAR;AAID,KAVD;AAYA,IAAA,WAAW,EAAE,WAZb;AAcF,IAAA,UAAU,EAAE,KAdV;AAgBF,IAAA,WAAW,EAAE,qBAACC,SAAD;AAAA,aAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAA,KAhBX;AAiBF,IAAA,aAAa,EAAE,KAjBb;AAkBF,IAAA,kBAAkB,EAAE,IAlBlB;AAmBF,IAAA,QAAQ,EAAE,CAnBR;AAoBF,IAAA,YAAY,EAAE,KApBZ;AAqBF,IAAA,eAAe,EAAE,KArBf;AAuBF,IAAA,gBAAgB,EAAE,0BAAAC,aAAa;AAAA,aAAIA,aAAa,EAAjB;AAAA,KAvB7B;AAyBF,IAAA,iBAAiB,EAAE,2BAAAC,QAAQ;AAAA,aAAIA,QAAQ,EAAZ;AAAA,KAzBzB;AA0BF,IAAA,gBAAgB,EAAE,KA1BhB;AA2BF,IAAA,iBAAiB,EAAE,KA3BjB;AA4BF,IAAA,oCAAoC,EAAE,IA5BpC;AA8BF,IAAA,iBAAiB,EAAE,IA9BjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAoCD;;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,SAAS,EAAE,EADF;AAETC,IAAAA,MAAM,EAAE,GAFC;AAGTC,IAAAA,KAAK,EAAE,GAHE;AAITC,IAAAA,IAAI,EAAE,CAJG;AAKTC,IAAAA,SAAS,EAAE;AALF;AADoB,CAAlB,CAAf;AAUA,eAAepB,UAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {Calendar } from 'react-native-calendars'\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction CalendarDH() {\n\n  const dispatch = useDispatch();\n  const now = useSelector((state) => state.helper.now)\n\n  return (\n    <View style={styles.container}>\n      <Calendar\n      current={now}\n      minDate={'2019-05-10'}\n      maxDate={now}\n  // Handler which gets executed on day press. Default = undefined\n      onDayPress={(day) => {\n        dispatch({\n        type: 'SELECT_DATE',\n        payload: day.timestamp\n      })\n      }}\n  // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\n      monthFormat={'MMMM yyyy'}\n  // Hide month navigation arrows. Default = false\n    hideArrows={false}\n  // Replace default arrows with custom ones (direction can be 'left' or 'right')\n    renderArrow={(direction) => (<Text>Go</Text>)}\n    hideExtraDays={false}\n    disableMonthChange={true}\n    firstDay={1}\n    hideDayNames={false}\n    showWeekNumbers={false}\n  // Handler which gets executed when press arrow icon left. It receive a callback can go back month\n    onPressArrowLeft={subtractMonth => subtractMonth()}\n  // Handler which gets executed when press arrow icon right. It receive a callback can go next month\n    onPressArrowRight={addMonth => addMonth()}\n    disableArrowLeft={false}\n    disableArrowRight={false}\n    disableAllTouchEventsForDisabledDays={true}\n  // Replace default month and year title with custom one. the function receive a date as parameter.\n    enableSwipeMonths={true}\n/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 70,\n    height: 500,\n    width: 300,\n    flex: 1,\n    alignSelf: 'center',\n  },\n});\n\nexport default CalendarDH;"]},"metadata":{},"sourceType":"module"}