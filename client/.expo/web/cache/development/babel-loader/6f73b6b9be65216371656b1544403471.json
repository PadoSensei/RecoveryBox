{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/MoodGraph.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MediumAppText, BoldAppText } from \"../styles/text\";\nimport Divider from \"../components/Divider\";\nimport { VictoryArea, VictoryChart, VictoryTheme } from 'victory-native';\nimport _, { values } from 'lodash';\n\nfunction MoodGraph() {\n  var historicalData = useSelector(function (state) {\n    return state.historicalData;\n  });\n\n  var feelingData = _.map(historicalData, function (el) {\n    return el.feeling;\n  });\n\n  var dateData = _.map(historicalData, function (el) {\n    return el.date;\n  });\n\n  var combinedData = [feelingData, dateData];\n\n  function create(array1, array2) {\n    var list = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(array1), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n      var obj = {\n        'date': 'value',\n        'feeling': 'value'\n      };\n      obj.date = array1[i];\n      obj.feeling = array2[i];\n      list.push(obj);\n    }\n\n    return list;\n  }\n\n  var combinedList = create(dateData, combinedData);\n  console.log(feelingData);\n  console.log(dateData);\n  console.log(combinedData);\n  console.log(combinedList);\n  var data = [{\n    quarter: 1,\n    earnings: 13000\n  }, {\n    quarter: 2,\n    earnings: 16500\n  }, {\n    quarter: 3,\n    earnings: 14250\n  }, {\n    quarter: 4,\n    earnings: 19000\n  }];\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Hello\"), React.createElement(BoldAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"MoodGraph\"), React.createElement(VictoryChart, {\n    width: 350,\n    theme: VictoryTheme.material,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(VictoryArea, {\n    data: data,\n    x: \"quarter\",\n    y: \"earnings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  })), React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default MoodGraph;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/MoodGraph.js"],"names":["React","useDispatch","useSelector","MediumAppText","BoldAppText","Divider","VictoryArea","VictoryChart","VictoryTheme","_","values","MoodGraph","historicalData","state","feelingData","map","el","feeling","dateData","date","combinedData","create","array1","array2","list","i","obj","push","combinedList","console","log","data","quarter","earnings","styles","container","material","StyleSheet"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, Image } from 'react-native';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { MediumAppText, BoldAppText } from '../styles/text'\nimport Divider from '../components/Divider'\nimport { VictoryArea, VictoryChart, VictoryTheme } from 'victory-native';\nimport _, { values } from 'lodash';\n\nfunction MoodGraph () {\n\n  const historicalData = useSelector((state) => state.historicalData);\n\n  const feelingData = _.map(historicalData, el => el.feeling)\n  const dateData = _.map(historicalData, el => el.date)\n  const combinedData = [feelingData, dateData]\n  \n  function create(array1, array2) {\n    let list = [];\n    for (let i of array1) {\n      let obj = {'date': 'value', 'feeling': 'value'}\n      obj.date = array1[i]\n      obj.feeling = array2[i]\n      list.push(obj)\n    }\n    return list\n  }\n\n  const combinedList = create(dateData, combinedData)\n  \n  console.log(feelingData)\n  console.log(dateData)\n  console.log(combinedData)\n  console.log(combinedList)\n\n  // const newData = [\n  //   {date: 1, feeling: 2 }\n  // ]\n\n  const data = [\n    { quarter: 1, earnings: 13000 },\n    { quarter: 2, earnings: 16500 },\n    { quarter: 3, earnings: 14250 },\n    { quarter: 4, earnings: 19000 }\n  ];\n  \n\n  return (\n    <View style={styles.container}>\n      <MediumAppText>Hello</MediumAppText>\n      <BoldAppText>MoodGraph</BoldAppText>\n      <VictoryChart width={350} theme={VictoryTheme.material}>\n      <VictoryArea data={data} x=\"quarter\" y=\"earnings\"/>\n      </VictoryChart>\n      <Divider/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  },\n});\n\n\n\nexport default MoodGraph;"]},"metadata":{},"sourceType":"module"}