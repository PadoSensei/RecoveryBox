{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/graphs/SuggestionsVisuals.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport { MediumAppText, BoldAppText } from \"../../styles/text\";\nimport Divider from \"../Divider\";\nimport { VictoryArea, VictoryAxis, VictoryGroup, VictoryChart, VictoryBar } from \"./Victory\";\nimport colors from \"../../styles/colors\";\nimport _ from 'lodash';\nimport { DateTime } from 'luxon';\nimport { Defs, LinearGradient, Stop } from \"react-native-svg\";\n\nfunction SuggestionsVisuals() {\n  var suggestionsToShow = 5;\n  var historicalData = useSelector(function (state) {\n    return state.historicalData;\n  });\n\n  var suggestionsData = _.map(historicalData, function (el) {\n    return el.suggestions;\n  });\n\n  var fullSuggestionsList = useSelector(function (state) {\n    return state.settings.suggestionSettings.fullSuggestionsList;\n  });\n\n  function create(array) {\n    var obj = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(i), _step2; !(_step2 = _iterator2()).done;) {\n        var j = _step2.value;\n\n        if (Object.keys(obj).includes(j)) {\n          obj[j] = obj[j] + 1;\n        } else {\n          obj[j] = 1;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function createSuggestions(obj) {\n    var arr = [];\n\n    for (var i in obj) {\n      var newobj = {};\n      newobj.suggestion = i;\n      newobj.value = obj[i];\n      arr.push(newobj);\n    }\n\n    return arr;\n  }\n\n  function topFive(arr, num) {\n    var newArr = [];\n    var max = num;\n\n    for (var i = 0; i < max; i++) {\n      newArr.push(arr[i]);\n    }\n\n    return newArr;\n  }\n\n  function randomNumGen(arr, min, max) {\n    var copyArr = arr.slice();\n    max = Math.floor(max - 1);\n    var newArr = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      var choose = Math.floor(Math.random() * (max - min + 1)) + min;\n      newArr.push(copyArr.splice(choose, 1)[0]);\n      max--;\n    }\n\n    return newArr;\n  }\n\n  var suggestionsObject = create(suggestionsData);\n  var suggestions = createSuggestions(suggestionsObject);\n\n  var sortedSuggestions = _.orderBy(suggestions, ['value'], ['desc']);\n\n  var topSuggestions = topFive(sortedSuggestions, suggestionsToShow);\n  var randomTopSuggestions = randomNumGen(topSuggestions, 0, suggestionsToShow);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(BoldAppText, {\n    style: {\n      color: colors.lightGray,\n      marginBottom: 0,\n      fontSize: 14,\n      alignSelf: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Top 5 Suggestions\"), React.createElement(VictoryGroup, {\n    width: 350,\n    height: 200,\n    styles: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(VictoryBar, {\n    data: randomTopSuggestions,\n    x: \"suggestion\",\n    y: \"value\",\n    style: {\n      data: {\n        fill: colors.cosmicLatte,\n        opacity: 1\n      },\n      parent: {}\n    },\n    interpolation: \"natural\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(VictoryAxis, {\n    tickCount: 5,\n    tickFormat: function tickFormat(x) {\n      return x;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SuggestionsVisuals;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/graphs/SuggestionsVisuals.js"],"names":["React","useSelector","MediumAppText","BoldAppText","Divider","VictoryArea","VictoryAxis","VictoryGroup","VictoryChart","VictoryBar","colors","_","DateTime","Defs","LinearGradient","Stop","SuggestionsVisuals","suggestionsToShow","historicalData","state","suggestionsData","map","el","suggestions","fullSuggestionsList","settings","suggestionSettings","create","array","obj","i","j","Object","keys","includes","createSuggestions","arr","newobj","suggestion","value","push","topFive","num","newArr","max","randomNumGen","min","copyArr","slice","Math","floor","length","choose","random","splice","suggestionsObject","sortedSuggestions","orderBy","topSuggestions","randomTopSuggestions","styles","container","color","lightGray","marginBottom","fontSize","alignSelf","data","fill","cosmicLatte","opacity","parent","x","StyleSheet","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["//https://formidable.com/open-source/victory/gallery/area-hover-styles\n\nimport React from 'react';\nimport { StyleSheet, View, Text, Image } from 'react-native';\nimport { useSelector} from \"react-redux\";\nimport { MediumAppText, BoldAppText } from '../../styles/text'\nimport Divider from '../Divider'\nimport { VictoryArea, VictoryAxis, VictoryGroup, VictoryChart, VictoryBar} from './Victory';\nimport colors from '../../styles/colors'\nimport _ from 'lodash';\nimport { DateTime } from 'luxon'\nimport {Defs, LinearGradient, Stop } from \"react-native-svg\";\n\nfunction SuggestionsVisuals () {\n\n  const suggestionsToShow = 5;\n  const historicalData = useSelector((state) => state.historicalData);\n  const suggestionsData = _.map(historicalData, el => el.suggestions) \n  const fullSuggestionsList = useSelector((state) => state.settings.suggestionSettings.fullSuggestionsList);\n  \n  // TODO add some kind of toggle to show more data on the graphs or change their format\n\n  function create (array) {\n    let obj = {}\n    for (let i of array) {\n      for (let j of i) {\n        if (Object.keys(obj).includes(j)) {\n          obj[j] = obj[j]+1\n        } else {\n          obj[j]= 1\n        }\n      }\n    }\n    return obj\n  }\n\n  function createSuggestions (obj) {\n    let arr = [];\n    for (let i in obj) {\n      let newobj = {}\n      newobj.suggestion = i\n      newobj.value = obj[i]\n      arr.push(newobj)\n    }\n    return arr;\n  }\n\n  function topFive (arr, num) {\n    let newArr= [];\n    let max = num;\n    for (let i =0; i < max; i++) {\n      newArr.push(arr[i]);\n    }\n    return newArr;\n  }\n\n  function randomNumGen (arr, min, max) {\n    let copyArr = arr.slice()\n    max = Math.floor(max-1);\n    let newArr = [];\n    for (let i = 0; i < arr.length; i++){\n      const choose = Math.floor(Math.random() * (max - min + 1)) + min;\n      newArr.push(copyArr.splice(choose,1)[0])\n      max-- \n    }\n    return newArr\n  }\n\n  const suggestionsObject = create(suggestionsData)\n  const suggestions = createSuggestions(suggestionsObject)\n  const sortedSuggestions = _.orderBy(suggestions, ['value'], ['desc'])\n  const topSuggestions = topFive(sortedSuggestions, suggestionsToShow)\n  const randomTopSuggestions = randomNumGen(topSuggestions, 0, suggestionsToShow)\n\n  return (\n    <View style={styles.container}>\n      <BoldAppText style={{color: colors.lightGray, marginBottom:0, fontSize:14, alignSelf:'flex-start',}}>Top 5 Suggestions</BoldAppText>\n      <VictoryGroup width={350} height={200} styles={styles.container} >\n        <VictoryBar \n        data={randomTopSuggestions} \n        x=\"suggestion\" \n        y=\"value\"\n        style={{ \n          data: { \n            fill: colors.cosmicLatte,\n            opacity: 1,      \n          },\n          parent: {}\n          }}\n        interpolation=\"natural\"\n        />\n        <VictoryAxis\n          tickCount={5}\n          tickFormat={(x)=> x}\n        />\n      </VictoryGroup>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\nexport default SuggestionsVisuals;"]},"metadata":{},"sourceType":"module"}