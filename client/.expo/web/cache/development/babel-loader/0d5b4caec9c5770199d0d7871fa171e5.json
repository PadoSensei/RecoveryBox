{"ast":null,"code":"export var bin = function bin(value) {\n  \"worklet\";\n\n  return value ? 1 : 0;\n};\nexport var mix = function mix(value, x, y) {\n  \"worklet\";\n\n  return x + value * (y - x);\n};\nexport var lerp = function lerp(x, y, value) {\n  \"worklet\";\n\n  return (1 - value) * x + value * y;\n};\nexport var toDeg = function toDeg(rad) {\n  \"worklet\";\n\n  return rad * 180 / Math.PI;\n};\nexport var toRad = function toRad(deg) {\n  \"worklet\";\n\n  return deg * Math.PI / 180;\n};\nexport var between = function between(value, lowerBound, upperBound) {\n  \"worklet\";\n\n  var inclusive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (inclusive) {\n    return value >= lowerBound && value <= upperBound;\n  }\n\n  return value > lowerBound && value < upperBound;\n};\nexport var clamp = function clamp(value, lowerBound, upperBound) {\n  \"worklet\";\n\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\nexport var cubicBezier = function cubicBezier(t, from, c1, c2, to) {\n  \"worklet\";\n\n  var term = 1 - t;\n  var a = 1 * Math.pow(term, 3) * Math.pow(t, 0) * from;\n  var b = 3 * Math.pow(term, 2) * Math.pow(t, 1) * c1;\n  var c = 3 * Math.pow(term, 1) * Math.pow(t, 2) * c2;\n  var d = 1 * Math.pow(term, 0) * Math.pow(t, 3) * to;\n  return a + b + c + d;\n};\nexport var round = function round(value) {\n  \"worklet\";\n\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var p = Math.pow(10, precision);\n  return Math.round(value * p) / p;\n};\n\nvar cuberoot = function cuberoot(x) {\n  \"worklet\";\n\n  var y = Math.pow(Math.abs(x), 1 / 3);\n  return x < 0 ? -y : y;\n};\n\nvar solveCubic = function solveCubic(a, b, c, d) {\n  \"worklet\";\n\n  if (Math.abs(a) < 1e-8) {\n    a = b;\n    b = c;\n    c = d;\n\n    if (Math.abs(a) < 1e-8) {\n      a = b;\n      b = c;\n\n      if (Math.abs(a) < 1e-8) {\n        return [];\n      }\n\n      return [-b / a];\n    }\n\n    var D = b * b - 4 * a * c;\n\n    if (Math.abs(D) < 1e-8) {\n      return [-b / (2 * a)];\n    } else if (D > 0) {\n      return [(-b + Math.sqrt(D)) / (2 * a), (-b - Math.sqrt(D)) / (2 * a)];\n    }\n\n    return [];\n  }\n\n  var p = (3 * a * c - b * b) / (3 * a * a);\n  var q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  var roots;\n\n  if (Math.abs(p) < 1e-8) {\n    roots = [cuberoot(-q)];\n  } else if (Math.abs(q) < 1e-8) {\n    roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n  } else {\n    var _D = q * q / 4 + p * p * p / 27;\n\n    if (Math.abs(_D) < 1e-8) {\n      roots = [-1.5 * q / p, 3 * q / p];\n    } else if (_D > 0) {\n      var u = cuberoot(-q / 2 - Math.sqrt(_D));\n      roots = [u - p / (3 * u)];\n    } else {\n      var _u = 2 * Math.sqrt(-p / 3);\n\n      var t = Math.acos(3 * q / p / _u) / 3;\n      var k = 2 * Math.PI / 3;\n      roots = [_u * Math.cos(t), _u * Math.cos(t - k), _u * Math.cos(t - 2 * k)];\n    }\n  }\n\n  for (var i = 0; i < roots.length; i++) {\n    roots[i] -= b / (3 * a);\n  }\n\n  return roots;\n};\n\nexport var cubicBezierYForX = function cubicBezierYForX(x, a, b, c, d) {\n  \"worklet\";\n\n  var pa = -a.x + 3 * b.x - 3 * c.x + d.x;\n  var pb = 3 * a.x - 6 * b.x + 3 * c.x;\n  var pc = -3 * a.x + 3 * b.x;\n  var pd = a.x - x;\n  var t = solveCubic(pa, pb, pc, pd).filter(function (root) {\n    return root >= 0 && root <= 1;\n  })[0];\n  return cubicBezier(t, a.y, b.y, c.y, d.y);\n};","map":{"version":3,"sources":["Math.ts"],"names":["bin","value","mix","x","y","lerp","toDeg","rad","Math","toRad","deg","between","inclusive","clamp","cubicBezier","term","a","b","c","d","round","precision","p","cuberoot","solveCubic","D","q","roots","u","t","k","i","cubicBezierYForX","pa","pb","pc","pd","root"],"mappings":"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","sourcesContent":["import { Vector } from \"./Vectors\";\n\nexport const bin = (value: boolean): 0 | 1 => {\n  \"worklet\";\n  return value ? 1 : 0;\n};\n\nexport const mix = (value: number, x: number, y: number) => {\n  \"worklet\";\n  return x + value * (y - x);\n};\n\nexport const lerp = (x: number, y: number, value: number) => {\n  \"worklet\";\n  return (1 - value) * x + value * y;\n};\n\nexport const toDeg = (rad: number) => {\n  \"worklet\";\n  return (rad * 180) / Math.PI;\n};\n\nexport const toRad = (deg: number) => {\n  \"worklet\";\n  return (deg * Math.PI) / 180;\n};\n\nexport const between = (\n  value: number,\n  lowerBound: number,\n  upperBound: number,\n  inclusive = true\n) => {\n  \"worklet\";\n  if (inclusive) {\n    return value >= lowerBound && value <= upperBound;\n  }\n  return value > lowerBound && value < upperBound;\n};\n\nexport const clamp = (\n  value: number,\n  lowerBound: number,\n  upperBound: number\n) => {\n  \"worklet\";\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\n\nexport const cubicBezier = (\n  t: number,\n  from: number,\n  c1: number,\n  c2: number,\n  to: number\n) => {\n  \"worklet\";\n  const term = 1 - t;\n  const a = 1 * term ** 3 * t ** 0 * from;\n  const b = 3 * term ** 2 * t ** 1 * c1;\n  const c = 3 * term ** 1 * t ** 2 * c2;\n  const d = 1 * term ** 0 * t ** 3 * to;\n  return a + b + c + d;\n};\n\nexport const round = (value: number, precision = 0) => {\n  \"worklet\";\n  const p = Math.pow(10, precision);\n  return Math.round(value * p) / p;\n};\n\n// https://stackoverflow.com/questions/27176423/function-to-solve-cubic-equation-analytically\nconst cuberoot = (x: number) => {\n  \"worklet\";\n  const y = Math.pow(Math.abs(x), 1 / 3);\n  return x < 0 ? -y : y;\n};\n\nconst solveCubic = (a: number, b: number, c: number, d: number) => {\n  \"worklet\";\n  if (Math.abs(a) < 1e-8) {\n    // Quadratic case, ax^2+bx+c=0\n    a = b;\n    b = c;\n    c = d;\n    if (Math.abs(a) < 1e-8) {\n      // Linear case, ax+b=0\n      a = b;\n      b = c;\n      if (Math.abs(a) < 1e-8) {\n        // Degenerate case\n        return [];\n      }\n      return [-b / a];\n    }\n\n    const D = b * b - 4 * a * c;\n    if (Math.abs(D) < 1e-8) {\n      return [-b / (2 * a)];\n    } else if (D > 0) {\n      return [(-b + Math.sqrt(D)) / (2 * a), (-b - Math.sqrt(D)) / (2 * a)];\n    }\n    return [];\n  }\n\n  // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n  const p = (3 * a * c - b * b) / (3 * a * a);\n  const q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  let roots;\n\n  if (Math.abs(p) < 1e-8) {\n    // p = 0 -> t^3 = -q -> t = -q^1/3\n    roots = [cuberoot(-q)];\n  } else if (Math.abs(q) < 1e-8) {\n    // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n    roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n  } else {\n    const D = (q * q) / 4 + (p * p * p) / 27;\n    if (Math.abs(D) < 1e-8) {\n      // D = 0 -> two roots\n      roots = [(-1.5 * q) / p, (3 * q) / p];\n    } else if (D > 0) {\n      // Only one real root\n      const u = cuberoot(-q / 2 - Math.sqrt(D));\n      roots = [u - p / (3 * u)];\n    } else {\n      // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n      const u = 2 * Math.sqrt(-p / 3);\n      const t = Math.acos((3 * q) / p / u) / 3; // D < 0 implies p < 0 and acos argument in [-1..1]\n      const k = (2 * Math.PI) / 3;\n      roots = [u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k)];\n    }\n  }\n\n  // Convert back from depressed cubic\n  for (let i = 0; i < roots.length; i++) {\n    roots[i] -= b / (3 * a);\n  }\n\n  return roots;\n};\n\nexport const cubicBezierYForX = (\n  x: number,\n  a: Vector,\n  b: Vector,\n  c: Vector,\n  d: Vector\n) => {\n  \"worklet\";\n  const pa = -a.x + 3 * b.x - 3 * c.x + d.x;\n  const pb = 3 * a.x - 6 * b.x + 3 * c.x;\n  const pc = -3 * a.x + 3 * b.x;\n  const pd = a.x - x;\n  // eslint-disable-next-line prefer-destructuring\n  const t = solveCubic(pa, pb, pc, pd).filter(\n    (root) => root >= 0 && root <= 1\n  )[0];\n  return cubicBezier(t, a.y, b.y, c.y, d.y);\n};\n"]},"metadata":{},"sourceType":"module"}