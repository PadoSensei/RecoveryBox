{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/SummaryScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MeetingsSummary from \"../components/MeetingsSummary\";\nimport FeelingGraph from \"../components/graphs/FeelingGraph\";\nimport MoodVisuals from \"../components/graphs/MoodVisuals\";\nimport SuggestionsVisuals from \"../components/graphs/SuggestionsVisuals\";\nimport Footer from \"../components/Footer\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Constants from 'expo-constants';\nimport { BoldAppText, MediumAppText } from \"../styles/text\";\nimport colors from \"../styles/colors\";\nimport _ from 'lodash';\nimport { Duration } from 'luxon';\n\nfunction SummaryScreen() {\n  var windowHeight = Dimensions.get('window').height;\n  var statusBarHeight = Constants.statusBarHeight;\n  var fullHeight = windowHeight + statusBarHeight;\n  var dynamicStyle = {\n    height: fullHeight\n  };\n  var dispatch = useDispatch();\n  var chartTimePeriod = useSelector(function (state) {\n    return state.helper.chartTimePeriod;\n  });\n\n  function clickHandler(timePeriod) {\n    dispatch({\n      type: 'UPDATE_TIMEPERIOD',\n      payload: timePeriod\n    });\n  }\n\n  var historicalData = useSelector(function (state) {\n    return state.historicalData;\n  });\n\n  var dateData = _.map(historicalData, function (el) {\n    return el.date;\n  });\n\n  var firstDate = dateData.sort(function (a, b) {\n    return a - b;\n  })[0];\n  var duration = Duration.fromMillis(firstDate).days;\n  return React.createElement(View, {\n    style: [styles.container, dynamicStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return clickHandler('week');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(MediumAppText, {\n    style: chartTimePeriod === 'week' ? styles.optionsTextSelected : styles.optionsTextUnselected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"WEEK\"))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return clickHandler('month');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(MediumAppText, {\n    style: chartTimePeriod === 'month' ? styles.optionsTextSelected : styles.optionsTextUnselected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"MONTH\"))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return clickHandler('month');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(MediumAppText, {\n    onPress: function onPress() {\n      return clickHandler('all-time');\n    },\n    style: chartTimePeriod === 'all-time' ? styles.optionsTextSelected : styles.optionsTextUnselected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"ALL-TIME\")))), React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.textWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(BoldAppText, {\n    style: {\n      fontSize: 15,\n      color: colors.orange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"xxx \"), React.createElement(BoldAppText, {\n    style: {\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"days in recovery\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, React.createElement(MeetingsSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.feelingGraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(FeelingGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(MoodVisuals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(SuggestionsVisuals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))), React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.platinum,\n    flex: 1,\n    paddingBottom: 65\n  },\n  scrollView: {\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 70,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12\n  },\n  options: {\n    position: 'absolute',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    margin: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '95%'\n  },\n  optionsTextSelected: {\n    marginTop: -3,\n    marginRight: 7,\n    borderBottomWidth: 2,\n    borderColor: colors.blue,\n    fontFamily: 'Montserrat_700Bold',\n    color: colors.darkGrayFont,\n    paddingBottom: 2\n  },\n  optionsTextUnselected: {\n    marginTop: -3,\n    marginRight: 7,\n    opacity: 0.5,\n    fontFamily: 'Montserrat_500Medium',\n    paddingBottom: 2\n  },\n  textWrapper: {\n    marginTop: 10,\n    marginBottom: 20\n  },\n  feelingGraph: {\n    marginBottom: -20\n  }\n});\nexport default SummaryScreen;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/SummaryScreen.js"],"names":["React","useState","useSelector","useDispatch","MeetingsSummary","FeelingGraph","MoodVisuals","SuggestionsVisuals","Footer","Constants","BoldAppText","MediumAppText","colors","_","Duration","SummaryScreen","windowHeight","Dimensions","get","height","statusBarHeight","fullHeight","dynamicStyle","dispatch","chartTimePeriod","state","helper","clickHandler","timePeriod","type","payload","historicalData","dateData","map","el","date","firstDate","sort","a","b","duration","fromMillis","days","styles","container","options","optionsTextSelected","optionsTextUnselected","scrollView","textWrapper","flexDirection","fontSize","color","orange","feelingGraph","StyleSheet","create","backgroundColor","platinum","flex","paddingBottom","borderRadius","elevation","marginLeft","marginRight","marginTop","marginBottom","paddingHorizontal","paddingVertical","position","margin","justifyContent","width","borderBottomWidth","borderColor","blue","fontFamily","darkGrayFont","opacity"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, ScrollView, TouchableOpacity, TouchableHighlight } from 'react-native';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MeetingsSummary from '../components/MeetingsSummary'\nimport FeelingGraph from '../components/graphs/FeelingGraph'\nimport MoodVisuals from '../components/graphs/MoodVisuals'\nimport SuggestionsVisuals from '../components/graphs/SuggestionsVisuals'\nimport Footer from '../components/Footer'\nimport { Dimensions } from \"react-native\";\nimport Constants from 'expo-constants';\nimport { BoldAppText, MediumAppText } from '../styles/text';\nimport colors from '../styles/colors';\nimport _ from 'lodash';\nimport { Duration } from 'luxon'\n\nfunction SummaryScreen () {\n\n  const windowHeight = Dimensions.get('window').height;\n  const statusBarHeight = Constants.statusBarHeight\n  const fullHeight = windowHeight + statusBarHeight;\n\n  const dynamicStyle = {\n    height: fullHeight,\n    // paddingTop: statusBarHeight,\n  };\n\n\n  const dispatch = useDispatch();\n  const chartTimePeriod = useSelector((state) => state.helper.chartTimePeriod)\n\n  function clickHandler (timePeriod) {\n    dispatch({\n      type: 'UPDATE_TIMEPERIOD',\n      payload: timePeriod\n    })\n  }\n\n  const historicalData = useSelector((state) => state.historicalData);\n  const dateData = _.map(historicalData, el => el.date)\n  const firstDate = dateData.sort((a,b)=>a-b)[0]\n  const duration = Duration.fromMillis(firstDate).days\n\n  //TODO change the current onpress to something swipeable?\n  // TODO add key for first graph\n  // TODO add values on graphs when clicked\n\n  return (\n    <View style={[styles.container,  dynamicStyle]}>\n        <View style={styles.options}>\n          <View >\n            <TouchableOpacity onPress={()=>clickHandler('week')}>\n              <MediumAppText style={chartTimePeriod === 'week' ? styles.optionsTextSelected : styles.optionsTextUnselected}>WEEK</MediumAppText>\n            </TouchableOpacity>\n          </View>\n          <View>\n            <TouchableOpacity onPress={()=>clickHandler('month')}>\n              <MediumAppText  style={chartTimePeriod === 'month' ? styles.optionsTextSelected : styles.optionsTextUnselected}>MONTH</MediumAppText>\n            </TouchableOpacity>\n          </View>\n          <View>\n            <TouchableOpacity onPress={()=>clickHandler('month')}>\n              <MediumAppText onPress={()=>clickHandler('all-time')} style={chartTimePeriod === 'all-time' ? styles.optionsTextSelected : styles.optionsTextUnselected}>ALL-TIME</MediumAppText>\n            </TouchableOpacity>\n          </View>\n        </View>\n      <ScrollView style={styles.scrollView}>\n        <View>\n          <View style={styles.textWrapper}>\n            <View style={{flexDirection: 'row'}}>\n            <BoldAppText style={{fontSize: 15, color:colors.orange}}>xxx </BoldAppText>\n            <BoldAppText style={{fontSize: 15}}>days in recovery</BoldAppText>\n            </View>\n            <View>\n              <MeetingsSummary />\n            </View>\n          </View>\n          <View style={styles.feelingGraph}>\n            <FeelingGraph />\n          </View>\n          <View >\n            <MoodVisuals />\n          </View>\n          <View >\n            <SuggestionsVisuals/>\n          </View>\n        </View>\n      </ScrollView>\n      <Footer/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.platinum,\n    flex: 1,\n    paddingBottom: 65,\n  },\n  scrollView: {\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 70,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  options: {\n    position: 'absolute',\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    margin: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '95%'\n  },\n  optionsTextSelected: {\n    marginTop: -3,\n    marginRight: 7,\n    borderBottomWidth: 2,\n    borderColor: colors.blue,\n    fontFamily: 'Montserrat_700Bold',\n    color: colors.darkGrayFont,\n    paddingBottom: 2,\n  },\n  optionsTextUnselected: {\n    marginTop: -3,\n    marginRight: 7,\n    opacity: 0.5,\n    fontFamily: 'Montserrat_500Medium',\n    paddingBottom: 2,\n  },\n  textWrapper: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  feelingGraph: {\n    marginBottom: -20\n  },\n});\n\n\n\nexport default SummaryScreen;"]},"metadata":{},"sourceType":"module"}