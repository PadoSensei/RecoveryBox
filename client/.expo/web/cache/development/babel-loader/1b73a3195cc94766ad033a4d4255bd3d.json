{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/HistoryScreen.js\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport HomeWelcome from \"../components/HomeWelcome\";\nimport _ from 'lodash';\nimport SuggestionItem from \"../components/SuggestionItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction HistoryScreen() {\n  var _this = this;\n\n  var selectedDate = useSelector(function (state) {\n    return state.helper.selectedDate;\n  });\n  var UTCadjustment = 7200000;\n  var seladj = selectedDate - UTCadjustment;\n  var fullHistoricalInfo = useSelector(function (state) {\n    return state.historicalData;\n  });\n\n  var requiredInfo = _.filter(fullHistoricalInfo, function (el) {\n    return el.date === seladj;\n  });\n\n  var todaysDate = useSelector(function (state) {\n    return state.helper.now;\n  });\n  console.log(DateTime.fromMillis(todaysDate).startOf('day'));\n  console.log(selectedDate);\n\n  if (requiredInfo.length > 0) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(HomeWelcome, {\n      historicalDate: selectedDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \" Feeling level of \", requiredInfo[0].feeling, \" \"), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \" Went to \", requiredInfo[0].meetings, \" meetings \"), requiredInfo[0].moods.map(function (mood) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }\n      }, \"Mood of \", mood);\n    }), requiredInfo[0].suggestions.map(function (suggestion) {\n      return React.createElement(SuggestionItem, {\n        key: suggestion,\n        name: suggestion,\n        selected: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      });\n    }));\n  } else {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, \"You have no data for today. That means you wern't registered at that time.\");\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    textAlign: 'center',\n    backgroundColor: '#fff'\n  }\n});\nexport default HistoryScreen;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/HistoryScreen.js"],"names":["React","useEffect","HomeWelcome","_","SuggestionItem","useDispatch","useSelector","HistoryScreen","selectedDate","state","helper","UTCadjustment","seladj","fullHistoricalInfo","historicalData","requiredInfo","filter","el","date","todaysDate","now","console","log","DateTime","fromMillis","startOf","length","styles","container","feeling","meetings","moods","map","mood","suggestions","suggestion","StyleSheet","create","flex","textAlign","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,cAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;;AAEA,SAASC,aAAT,GAA0B;AAAA;;AAExB,MAAMC,YAAY,GAAGF,WAAW,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAN,CAAaF,YAAxB;AAAA,GAAD,CAAhC;AACA,MAAMG,aAAa,GAAG,OAAtB;AACA,MAAMC,MAAM,GAAGJ,YAAY,GAAGG,aAA9B;AACA,MAAME,kBAAkB,GAAGP,WAAW,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACK,cAAjB;AAAA,GAAD,CAAtC;;AACA,MAAMC,YAAY,GAAGZ,CAAC,CAACa,MAAF,CAASH,kBAAT,EAA6B,UAAAI,EAAE;AAAA,WAAIA,EAAE,CAACC,IAAH,KAAYN,MAAhB;AAAA,GAA/B,CAArB;;AAEA,MAAMO,UAAU,GAAGb,WAAW,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAN,CAAaU,GAAxB;AAAA,GAAD,CAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,UAAT,CAAoBL,UAApB,EAAgCM,OAAhC,CAAwC,KAAxC,CAAZ;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;;AAGA,MAAIO,YAAY,CAACW,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,cAAc,EAAEpB,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAyBO,YAAY,CAAC,CAAD,CAAZ,CAAgBc,OAAzC,MAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBd,YAAY,CAAC,CAAD,CAAZ,CAAgBe,QAAhC,eAHF,EAIGf,YAAY,CAAC,CAAD,CAAZ,CAAgBgB,KAAhB,CAAsBC,GAAtB,CACC,UAAAC,IAAI;AAAA,aAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeA,IAAf,CAAJ;AAAA,KADL,CAJH,EAOGlB,YAAY,CAAC,CAAD,CAAZ,CAAgBmB,WAAhB,CAA4BF,GAA5B,CACC,UAAAG,UAAU;AAAA,aAAI,oBAAC,cAAD;AACV,QAAA,GAAG,EAAEA,UADK;AAEV,QAAA,IAAI,EAAEA,UAFI;AAGV,QAAA,QAAQ,EAAE,IAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KADX,CAPH,CADF;AAiBD,GAlBD,MAkBO;AACL,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFADF;AAGD;AAEF;;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAE,QAFF;AAGTC,IAAAA,eAAe,EAAE;AAHR;AADoB,CAAlB,CAAf;AAWA,eAAejC,aAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport HomeWelcome from '../components/HomeWelcome'\nimport _ from 'lodash'\nimport SuggestionItem from '../components/SuggestionItem'\nimport {useDispatch, useSelector } from \"react-redux\";\n\nfunction HistoryScreen () {\n\n  const selectedDate = useSelector((state) => state.helper.selectedDate)\n  const UTCadjustment = 7200000\n  const seladj = selectedDate - UTCadjustment\n  const fullHistoricalInfo = useSelector((state) => state.historicalData)\n  const requiredInfo = _.filter(fullHistoricalInfo, el => el.date === seladj)\n\n  const todaysDate = useSelector((state) => state.helper.now);\n  console.log(DateTime.fromMillis(todaysDate).startOf('day'))\n  console.log(selectedDate)\n  //TODO remove UTC adjustment when data is sitting on server\n\n  if (requiredInfo.length > 0) {\n    return (\n      <View style={styles.container}>\n        <HomeWelcome historicalDate={selectedDate}/>\n        <Text> Feeling level of {requiredInfo[0].feeling} </Text>\n        <Text> Went to {requiredInfo[0].meetings} meetings </Text>\n        {requiredInfo[0].moods.map(\n          mood => <Text>Mood of {mood}</Text>\n        )}\n        {requiredInfo[0].suggestions.map(\n          suggestion => <SuggestionItem\n              key={suggestion}\n              name={suggestion}\n              selected={true}\n            />\n          )}\n      </View>\n    )\n  } else {\n    return (\n      <Text>You have no data for today. That means you wern't registered at that time.</Text>\n    )\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    textAlign: 'center',\n    backgroundColor: '#fff',\n  },\n\n});\n\n\n\nexport default HistoryScreen;"]},"metadata":{},"sourceType":"module"}