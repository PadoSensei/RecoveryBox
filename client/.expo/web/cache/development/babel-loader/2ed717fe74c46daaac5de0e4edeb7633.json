{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Moods.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BoldAppText, MediumAppText } from \"../styles/text\";\nimport { Picker } from '@react-native-community/picker';\n\nfunction Moods() {\n  var _this = this;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(BoldAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Select a set of moods for today\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Are you feeling good?\"), React.createElement(Picker, {\n    selectedValue: this.state.language,\n    style: {\n      height: 50,\n      width: 100\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return _this.setState({\n        language: itemValue\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Happy\",\n    value: \"Happy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Positive\",\n    value: \"Positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Energetic\",\n    value: \"Positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Calm\",\n    value: \"Calm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Or are things a little bit tough?\"), React.createElement(Picker, {\n    selectedValue: this.state.language,\n    style: {\n      height: 50,\n      width: 100\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return _this.setState({\n        language: itemValue\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Anxious\",\n    value: \"Anxious\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Worried\",\n    value: \"Worried\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Stressed\",\n    value: \"Stressed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Or input yours here...\"), React.createElement(TextInput, {\n    placeholder: \"Enter a mood\",\n    value: usernameInput ? usernameInput : '',\n    onChangeText: function onChangeText(text) {\n      return onChangeUsername(text);\n    },\n    style: styles.input,\n    textContentType: 'mood',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default Moods;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Moods.js"],"names":["React","useState","useDispatch","useSelector","BoldAppText","MediumAppText","Picker","Moods","styles","container","state","language","height","width","itemValue","itemIndex","setState","usernameInput","text","onChangeUsername","input","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, Image, TextInput } from 'react-native';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { BoldAppText, MediumAppText } from '../styles/text'\nimport {Picker} from '@react-native-community/picker';\n\nfunction Moods () {\n\n \n  return (\n    <View style={styles.container}>\n      <BoldAppText>Select a set of moods for today</BoldAppText>\n      <View>\n      <MediumAppText>Are you feeling good?</MediumAppText>\n      <Picker\n        selectedValue={this.state.language}\n        style={{height: 50, width: 100}}\n        onValueChange={(itemValue, itemIndex) =>\n        this.setState({language: itemValue})\n      }>\n        <Picker.Item label=\"Happy\" value=\"Happy\" />\n        <Picker.Item label=\"Positive\" value=\"Positive\" />\n        <Picker.Item label=\"Energetic\" value=\"Positive\" />\n        <Picker.Item label=\"Calm\" value=\"Calm\" />\n      </Picker>\n      </View>\n      <View>\n      <MediumAppText>Or are things a little bit tough?</MediumAppText>\n      <Picker\n        selectedValue={this.state.language}\n        style={{height: 50, width: 100}}\n        onValueChange={(itemValue, itemIndex) =>\n        this.setState({language: itemValue})\n      }>\n        <Picker.Item label=\"Anxious\" value=\"Anxious\" />\n        <Picker.Item label=\"Worried\" value=\"Worried\" />\n        <Picker.Item label=\"Stressed\" value=\"Stressed\" />\n      </Picker>\n      </View>\n      <View>\n      <MediumAppText>Or input yours here...</MediumAppText>\n      <TextInput\n        placeholder='Enter a mood'\n        value= {usernameInput ? usernameInput : ''}\n        onChangeText={text => onChangeUsername(text)}\n        style={styles.input}\n        textContentType={'mood'}\n      />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  },\n});\n\n\n\nexport default Moods;"]},"metadata":{},"sourceType":"module"}