{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Moods.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BoldAppText, MediumAppText } from \"../styles/text\";\nimport { Picker } from '@react-native-community/picker';\n\nfunction Moods() {\n  var Item = Picker.Item;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateOne = _useState2[0],\n      setStateOne = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateTwo = _useState4[0],\n      setStateTwo = _useState4[1];\n\n  var currentMoods = useSelector(function (state) {\n    return state.dailyInfo.moods;\n  });\n  var moodAggregator = 'xxx';\n  console.log(currentMoods);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(BoldAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Select a set of moods for today\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Are you feeling good?\"), React.createElement(Picker, {\n    selectedValue: stateOne,\n    style: {\n      height: 50,\n      width: 100\n    },\n    mode: \"dropdown\",\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setStateOne(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Item, {\n    label: \"Select a mood...\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Happy\",\n    value: \"Happy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Positive\",\n    value: \"Positive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Energetic\",\n    value: \"Energetic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Calm\",\n    value: \"Calm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Or are things a little bit tough?\"), React.createElement(Picker, {\n    selectedValue: stateTwo,\n    style: {\n      height: 50,\n      width: 100\n    },\n    mode: \"dropdown\",\n    onValueChange: function onValueChange(v, itemIndex) {\n      return setStateTwo(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Item, {\n    label: \"Select a mood...\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Anxious\",\n    value: \"Anxious\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Worried\",\n    value: \"Worried\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Item, {\n    label: \"Stressed\",\n    value: \"Stressed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Or input yours here...\"), React.createElement(TextInput, {\n    placeholder: \"Enter a mood\",\n    value: '',\n    onChangeText: function onChangeText(text) {\n      return text;\n    },\n    textContentType: 'mood',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default Moods;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/Moods.js"],"names":["React","useState","useDispatch","useSelector","BoldAppText","MediumAppText","Picker","Moods","Item","stateOne","setStateOne","stateTwo","setStateTwo","currentMoods","state","dailyInfo","moods","moodAggregator","console","log","styles","container","height","width","itemValue","itemIndex","v","text","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, Image, TextInput } from 'react-native';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { BoldAppText, MediumAppText } from '../styles/text'\nimport {Picker} from '@react-native-community/picker';\n\nfunction Moods () {\n \n  const Item = Picker.Item;\n\n  const [stateOne, setStateOne] = useState(false)\n  const [stateTwo, setStateTwo] = useState(false)\n  const currentMoods = useSelector((state) => state.dailyInfo.moods)\n\n  const moodAggregator = 'xxx'\n\n  console.log(currentMoods)\n\n  return (\n    <View style={styles.container}>\n      <BoldAppText>Select a set of moods for today</BoldAppText>\n      <View>\n      <MediumAppText>Are you feeling good?</MediumAppText>\n      <Picker\n        selectedValue={stateOne}\n        style={{height: 50, width: 100}}\n        mode=\"dropdown\"\n        onValueChange={(itemValue, itemIndex) =>\n        setStateOne(itemValue)\n      }>\n        <Item label=\"Select a mood...\" value='' />\n        <Item label=\"Happy\" value=\"Happy\" />\n        <Item label=\"Positive\" value=\"Positive\" />\n        <Item label=\"Energetic\" value=\"Energetic\" />\n        <Item label=\"Calm\" value=\"Calm\" />\n      </Picker>\n      </View>\n      <View>\n      <MediumAppText>Or are things a little bit tough?</MediumAppText>\n      <Picker\n        selectedValue={stateTwo}\n        style={{height: 50, width: 100}}\n        mode=\"dropdown\"\n        onValueChange={(v, itemIndex) =>\n        setStateTwo(v)\n      }>\n        <Item label=\"Select a mood...\" value='' />\n        <Item label=\"Anxious\" value=\"Anxious\" />\n        <Item label=\"Worried\" value=\"Worried\" />\n        <Item label=\"Stressed\" value=\"Stressed\" />\n      </Picker>\n      </View>\n      <View>\n      <MediumAppText>Or input yours here...</MediumAppText>\n      <TextInput\n        placeholder='Enter a mood'\n        value= {''}\n        onChangeText={text => text}\n        textContentType={'mood'}\n      />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  },\n});\n\n\n\nexport default Moods;"]},"metadata":{},"sourceType":"module"}