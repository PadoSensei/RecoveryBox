{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionsList.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MediumAppText } from \"../styles/text\";\nimport SuggestionItem from \"./SuggestionItem\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction SuggestionsList() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var suggestionListToDisplay = useSelector(function (state) {\n    return state.settings.suggestionSettings.suggestionsList;\n  });\n  var navigation = useNavigation();\n  var dailySuggestions = useSelector(function (state) {\n    return state.dailyInfo.suggestions;\n  });\n\n  function clickHandler(list, suggestion) {\n    if (!list.includes(suggestion)) {\n      dispatch({\n        type: \"ADDTO_SUGGESTIONS\",\n        payload: suggestion\n      });\n    } else {\n      dispatch({\n        type: \"REMOVEFROM_SUGGESTIONS\",\n        payload: suggestion\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    style: {\n      fontSize: 10,\n      marginTop: 25\n    },\n    onPress: function onPress() {\n      return navigation.navigate('ModifySuggestions');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"MY DAILY SUGGESTIONS\")), React.createElement(View, {\n    style: styles.cog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ModifySuggestions');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.icons,\n    source: require(\"../assets/cog.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.suggestionWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, suggestionListToDisplay.map(function (suggestion) {\n    return React.createElement(SuggestionItem, {\n      key: suggestion,\n      name: suggestion,\n      clickHandler: clickHandler,\n      selected: dailySuggestions.includes(suggestion) ? true : false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    });\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, _toConsumableArray(dailySuggestions)));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  cog: {\n    position: 'absolute',\n    right: 10,\n    top: 5\n  },\n  icons: {\n    height: 34,\n    width: 34\n  },\n  suggestionWrapper: {\n    display: 'flex',\n    width: '80%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    justifyContent: 'space-around'\n  }\n});\nexport default SuggestionsList;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/SuggestionsList.js"],"names":["React","MediumAppText","SuggestionItem","useNavigation","useDispatch","useSelector","SuggestionsList","dispatch","suggestionListToDisplay","state","settings","suggestionSettings","suggestionsList","navigation","dailySuggestions","dailyInfo","suggestions","clickHandler","list","suggestion","includes","type","payload","styles","container","fontSize","marginTop","navigate","cog","icons","require","suggestionWrapper","map","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","position","right","top","height","width","display","flexDirection","flexWrap","alignContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Image, View, TouchableOpacity } from 'react-native';\nimport { MediumAppText } from '../styles/text';\nimport SuggestionItem from './SuggestionItem';\nimport { useNavigation } from '@react-navigation/native';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nfunction SuggestionsList () {\n\n  const dispatch = useDispatch();\n  const suggestionListToDisplay = useSelector((state) => state.settings.suggestionSettings.suggestionsList);\n  const navigation = useNavigation();\n  const dailySuggestions = useSelector((state) => state.dailyInfo.suggestions);\n\n  function clickHandler (list, suggestion) {\n    if (!list.includes(suggestion)) {\n      dispatch({\n        type: \"ADDTO_SUGGESTIONS\",\n        payload: suggestion\n      });\n    } else {\n      dispatch({\n        type: \"REMOVEFROM_SUGGESTIONS\",\n        payload: suggestion\n      });\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <MediumAppText style={{fontSize: 10, marginTop: 25}}  onPress={() => navigation.navigate('ModifySuggestions')}>MY DAILY SUGGESTIONS</MediumAppText>\n      </View>\n      <View style={styles.cog}>\n        <TouchableOpacity onPress={() => navigation.navigate('ModifySuggestions')}>\n          <Image style={styles.icons} source={require('../assets/cog.png')} />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.suggestionWrapper}>\n        {suggestionListToDisplay.map(\n          suggestion =>\n          <SuggestionItem\n            key={suggestion}\n            name={suggestion}\n            clickHandler={clickHandler}\n            selected={dailySuggestions.includes(suggestion) ? true : false}\n          />\n        )}\n      </View>\n      <Text>{[...dailySuggestions]}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  cog: {\n    position: 'absolute',\n    right: 10,\n    top: 5,\n  },\n  icons: {\n    height: 34,\n    width: 34,\n  },\n  suggestionWrapper: {\n    display: 'flex',\n    width: '80%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignContent: 'center', \n    justifyContent: 'space-around'\n  }\n});\n\nexport default SuggestionsList;"]},"metadata":{},"sourceType":"module"}