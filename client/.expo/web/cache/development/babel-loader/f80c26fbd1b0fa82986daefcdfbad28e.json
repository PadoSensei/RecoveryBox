{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/SummaryScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector } from \"react-redux\";\nimport MeetingsSummary from \"../components/MeetingsSummary\";\nimport FeelingGraph from \"../components/graphs/FeelingGraph\";\nimport MoodVisuals from \"../components/graphs/MoodVisuals\";\nimport SuggestionsVisuals from \"../components/graphs/SuggestionsVisuals\";\nimport Footer from \"../components/Footer\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Constants from 'expo-constants';\nimport { MediumAppText } from \"../styles/text\";\nimport colors from \"../styles/colors\";\n\nfunction SummaryScreen() {\n  var windowHeight = Dimensions.get('window').height;\n  var statusBarHeight = Constants.statusBarHeight;\n  var fullHeight = windowHeight + statusBarHeight;\n  var dynamicStyle = {\n    height: fullHeight,\n    paddingTop: statusBarHeight\n  };\n  var chartHeight = {\n    height: fullHeight / 4\n  };\n\n  var _useState = useState('week'),\n      _useState2 = _slicedToArray(_useState, 2),\n      timePeriod = _useState2[0],\n      setTimePeriod = _useState2[1];\n\n  return React.createElement(View, {\n    style: [styles.container, dynamicStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.optionsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"WEEK\")), React.createElement(View, {\n    style: styles.optionsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"MONTH\")), React.createElement(View, {\n    style: styles.optionsText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"ALL-TIME\"))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.textWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Days in recovery\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(MeetingsSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    styles: chartHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(FeelingGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    styles: chartHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(MoodVisuals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    styles: chartHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(SuggestionsVisuals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })))), React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flex: 1,\n    paddingBottom: 55\n  },\n  options: {\n    flex: 1,\n    flexDirection: 'row',\n    alignSelf: 'flex-end',\n    marginRight: 25\n  },\n  optionsText: {\n    marginTop: -3,\n    marginBottom: -3,\n    marginRight: 7,\n    borderBottomWidth: 1,\n    borderColor: colors.blue\n  },\n  charts: {}\n});\nexport default SummaryScreen;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/containers/SummaryScreen.js"],"names":["React","useState","useSelector","MeetingsSummary","FeelingGraph","MoodVisuals","SuggestionsVisuals","Footer","Constants","MediumAppText","colors","SummaryScreen","windowHeight","Dimensions","get","height","statusBarHeight","fullHeight","dynamicStyle","paddingTop","chartHeight","timePeriod","setTimePeriod","styles","container","options","optionsText","textWrapper","StyleSheet","create","backgroundColor","flex","paddingBottom","flexDirection","alignSelf","marginRight","marginTop","marginBottom","borderBottomWidth","borderColor","blue","charts"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, Text, ScrollView } from 'react-native';\nimport { useSelector } from \"react-redux\";\nimport MeetingsSummary from '../components/MeetingsSummary'\nimport FeelingGraph from '../components/graphs/FeelingGraph'\nimport MoodVisuals from '../components/graphs/MoodVisuals'\nimport SuggestionsVisuals from '../components/graphs/SuggestionsVisuals'\nimport Footer from '../components/Footer'\nimport { Dimensions } from \"react-native\";\nimport Constants from 'expo-constants';\nimport { MediumAppText } from '../styles/text';\nimport colors from '../styles/colors';\n\n\nfunction SummaryScreen () {\n\n  const windowHeight = Dimensions.get('window').height;\n  const statusBarHeight = Constants.statusBarHeight\n  const fullHeight = windowHeight + statusBarHeight;\n\n  const dynamicStyle = {\n    height: fullHeight,\n    paddingTop: statusBarHeight,\n  };\n\n  const chartHeight = {\n    height: fullHeight/4,\n  };\n\n  const [timePeriod, setTimePeriod] = useState('week');\n\n  //TODO dispatch this to helper reducer so we have access in all the charts\n\n  return (\n    <View style={[styles.container,  dynamicStyle]}>\n      <ScrollView >\n        <View style={styles.options}>\n          {/* add option to show data for a week, month or alltime */}\n          <View style={styles.optionsText}>\n            <MediumAppText>WEEK</MediumAppText>\n          </View>\n          <View style={styles.optionsText}>\n            <MediumAppText>MONTH</MediumAppText>\n          </View>\n          <View style={styles.optionsText}>\n            <MediumAppText>ALL-TIME</MediumAppText>\n          </View>\n        </View>\n        <View>\n          <View style={styles.textWrapper}>\n            <View>\n              <Text>Days in recovery</Text>\n            </View>\n            <View>\n              <MeetingsSummary />\n            </View>\n          </View>\n          <View styles={chartHeight}>\n            <FeelingGraph />\n          </View>\n          <View styles={chartHeight}>\n            <MoodVisuals />\n          </View>\n          <View styles={chartHeight}>\n            <SuggestionsVisuals/>\n          </View>\n        </View>\n      </ScrollView>\n      <Footer/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    flex: 1,\n    paddingBottom: 55,\n  },\n  options: {\n    flex: 1,\n    flexDirection: 'row',\n    alignSelf: 'flex-end',\n    marginRight: 25,\n  },\n  optionsText: {\n    marginTop: -3,\n    marginBottom: -3,\n    marginRight: 7,\n    borderBottomWidth: 1,\n    borderColor: colors.blue,\n  },\n  charts: {\n\n  },\n\n});\n\n\n\nexport default SummaryScreen;"]},"metadata":{},"sourceType":"module"}